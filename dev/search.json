[{"path":[]},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement karissa.whiting@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to cbioportalR","title":"Contributing to cbioportalR","text":"outlines propose change cbioportalR. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to cbioportalR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to cbioportalR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to cbioportalR","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"karissawhiting/cbioportalR\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to cbioportalR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to cbioportalR","text":"Please note cbioportalR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Karissa Whiting Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/articles/internal-structure.html","id":"guiding-principles","dir":"Articles","previous_headings":"","what":"Guiding Principles","title":"Internal Structure & Guiding Principles","text":"aim keep returned data close raw API results possible avoid additional transformations/formatting. , data returned tidy format. future may consider removing non informative columns results returning everything tibbles clean names, now keeping data raw format helps us flexible future cBioPortal API changes. try limit internal API calls within functions user explicitly ask . places deem necessary break (example .get_data_by_study() user passes study_id look molecular_profile_id), largely default slightly less informative messages/checks favor fewer hidden calls, can problematic slow internet large data sets.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/articles/internal-structure.html","id":"general-structure","dir":"Articles","previous_headings":"","what":"General Structure","title":"Internal Structure & Guiding Principles","text":"cbp_api() internal function makes api calls (GET POST using {httr} package). user-facing internal functions paste together necessary URLs query parameters based function arguments pass . .get_data_by_study() .get_data_by_sample() internal utility functions work mutation/cna/fusion data pulls. Functions ending *_by_study() query study_id, functions ending *_by_sample() query sample ID, functions ending *_by_patient() query patient ID. specific differences functions starting available_*() starting get_*(). named according may use workflow. example, check available_profiles() study_id order get_fusions_by_study()","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/articles/overview-of-workflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Overview of Data Retrieval Workflow","text":"outline main data retrieval workflow functions using case study based two public sets data: 105 samples high risk nonmuscle invasive bladder cancer patients (Pietzak et al. 2017). 18 samples 18 prostate cancer patients (Granlund et al. 2020)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/articles/overview-of-workflow.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Overview of Data Retrieval Workflow","text":"accessing data need connect cBioPortal database set base URL R session. example use data public cBioPortal database instance (https://www.cbioportal.org). need token access public website. using private instance cBioPortal (like MSK’s institutional database), need acquire token save .Renviron file. Note: MSK researcher working IMPACT, connect MSK’s cBioPortal instance get date IMPACT data, must follow MSK-IMPACT publication guidelines using data. set database url current R session use set_cbioportal_db() function. set public instance can either provide full URL function, just public shortcut. function check connection database set url (www.cbioportal.org/api) base url connect future API calls session. can use test_cbioportal_db time throughout session check connection. can helpful troubleshooting issues API calls.","code":"set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\" test_cbioportal_db() #> ✔ You are successfully connected!"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/articles/overview-of-workflow.html","id":"get-study-metadata","dir":"Articles","previous_headings":"","what":"Get Study Metadata","title":"Overview of Data Retrieval Workflow","text":"Now successfully connected, may want view studies available chosen database find correct study_id corresponding data want pull. studies unique identifier database. can view studies available database following: inspecting data frame, see unique study_id NMIBC data set \"blca_nmibc_2017\" unique study_id prostate cancer data set \"prad_msk_2019\". get information studies can following: Note: transpose function t() just used better view results -depth information study can found get_study_info() Lastly, important know genomic data available studies. studies database data available types genomic information. example, common studies provide data fusions/structural variants. can check available genomic data available_profiles(). Luckily, example studies mutation, copy number alteration fusion (structural variant) data available. data types unique molecular profile ID. molecular profile ID usually takes form <study_id>_mutations, <study_id>_structural_variants, <study_id>_cna.","code":"all_studies <- available_studies() all_studies #> # A tibble: 391 × 13 #>    studyId   name  description publicStudy #>    <chr>     <chr> <chr>       <lgl>       #>  1 acc_tcga  Adre… \"TCGA Adre… TRUE        #>  2 laml_tcga Acut… \"TCGA Acut… TRUE        #>  3 blca_tcga Blad… \"TCGA Blad… TRUE        #>  4 brca_tcga Brea… \"TCGA Brea… TRUE        #>  5 kirc_tcga Kidn… \"TCGA Kidn… TRUE        #>  6 cesc_tcga Cerv… \"TCGA Cerv… TRUE        #>  7 chol_tcga Chol… \"TCGA Chol… TRUE        #>  8 kich_tcga Kidn… \"TCGA Kidn… TRUE        #>  9 coadread… Colo… \"TCGA Colo… TRUE        #> 10 dlbc_tcga Lymp… \"TCGA Lymp… TRUE        #> # ℹ 381 more rows #> # ℹ 9 more variables: groups <chr>, #> #   status <int>, importDate <chr>, #> #   allSampleCount <int>, #> #   readPermission <lgl>, #> #   cancerTypeId <chr>, #> #   referenceGenome <chr>, pmid <chr>, … all_studies %>%   filter(studyId %in% c(\"blca_nmibc_2017\", \"prad_msk_2019\")) #> # A tibble: 2 × 13 #>   studyId    name  description publicStudy #>   <chr>      <chr> <chr>       <lgl>       #> 1 prad_msk_… Pros… MSK-IMPACT… TRUE        #> 2 blca_nmib… Nonm… IMPACT seq… TRUE        #> # ℹ 9 more variables: groups <chr>, #> #   status <int>, importDate <chr>, #> #   allSampleCount <int>, #> #   readPermission <lgl>, #> #   cancerTypeId <chr>, #> #   referenceGenome <chr>, pmid <chr>, #> #   citation <chr> get_study_info(\"blca_nmibc_2017\") %>%   t() #>                             [,1]                                                                            #> name                        \"Nonmuscle Invasive Bladder Cancer (MSK Eur Urol 2017)\"                         #> description                 \"IMPACT sequencing of 105 High Risk Nonmuscle Invasive Bladder Cancer samples.\" #> publicStudy                 \"TRUE\"                                                                          #> pmid                        \"28583311\"                                                                      #> citation                    \"Pietzak et al. Eur Urol 2017\"                                                  #> groups                      \"PUBLIC\"                                                                        #> status                      \"0\"                                                                             #> importDate                  \"2023-07-19 17:59:06\"                                                           #> allSampleCount              \"105\"                                                                           #> sequencedSampleCount        \"105\"                                                                           #> cnaSampleCount              \"105\"                                                                           #> mrnaRnaSeqSampleCount       \"0\"                                                                             #> mrnaRnaSeqV2SampleCount     \"0\"                                                                             #> mrnaMicroarraySampleCount   \"0\"                                                                             #> miRnaSampleCount            \"0\"                                                                             #> methylationHm27SampleCount  \"0\"                                                                             #> rppaSampleCount             \"0\"                                                                             #> massSpectrometrySampleCount \"0\"                                                                             #> completeSampleCount         \"0\"                                                                             #> readPermission              \"TRUE\"                                                                          #> treatmentCount              \"0\"                                                                             #> studyId                     \"blca_nmibc_2017\"                                                               #> cancerTypeId                \"blca\"                                                                          #> cancerType.name             \"Bladder Urothelial Carcinoma\"                                                  #> cancerType.dedicatedColor   \"Yellow\"                                                                        #> cancerType.shortName        \"BLCA\"                                                                          #> cancerType.parent           \"bladder\"                                                                       #> cancerType.cancerTypeId     \"blca\"                                                                          #> referenceGenome             \"hg19\" get_study_info(\"prad_msk_2019\") %>%   t() #>                             [,1]                                                              #> name                        \"Prostate Cancer (MSK, Cell Metab 2020)\"                          #> description                 \"MSK-IMPACT Sequencing of 18 prostate cancer tumor/normal pairs.\" #> publicStudy                 \"TRUE\"                                                            #> pmid                        \"31564440\"                                                        #> citation                    \"Granlund et al. Cell Metab 2020\"                                 #> groups                      \"PUBLIC\"                                                          #> status                      \"0\"                                                               #> importDate                  \"2023-06-20 12:45:47\"                                             #> allSampleCount              \"18\"                                                              #> sequencedSampleCount        \"18\"                                                              #> cnaSampleCount              \"18\"                                                              #> mrnaRnaSeqSampleCount       \"0\"                                                               #> mrnaRnaSeqV2SampleCount     \"0\"                                                               #> mrnaMicroarraySampleCount   \"0\"                                                               #> miRnaSampleCount            \"0\"                                                               #> methylationHm27SampleCount  \"0\"                                                               #> rppaSampleCount             \"0\"                                                               #> massSpectrometrySampleCount \"0\"                                                               #> completeSampleCount         \"0\"                                                               #> readPermission              \"TRUE\"                                                            #> treatmentCount              \"0\"                                                               #> studyId                     \"prad_msk_2019\"                                                   #> cancerTypeId                \"prostate\"                                                        #> cancerType.name             \"Prostate\"                                                        #> cancerType.dedicatedColor   \"Cyan\"                                                            #> cancerType.shortName        \"PROSTATE\"                                                        #> cancerType.parent           \"tissue\"                                                          #> cancerType.cancerTypeId     \"prostate\"                                                        #> referenceGenome             \"hg19\" available_profiles(study_id = \"blca_nmibc_2017\") #> # A tibble: 3 × 8 #>   molecularAlterationType datatype name    #>   <chr>                   <chr>    <chr>   #> 1 COPY_NUMBER_ALTERATION  DISCRETE Putati… #> 2 MUTATION_EXTENDED       MAF      Mutati… #> 3 STRUCTURAL_VARIANT      SV       Struct… #> # ℹ 5 more variables: description <chr>, #> #   showProfileInAnalysisTab <lgl>, #> #   patientLevel <lgl>, #> #   molecularProfileId <chr>, #> #   studyId <chr> available_profiles(study_id = \"prad_msk_2019\") #> # A tibble: 3 × 8 #>   molecularAlterationType datatype name    #>   <chr>                   <chr>    <chr>   #> 1 COPY_NUMBER_ALTERATION  DISCRETE Putati… #> 2 MUTATION_EXTENDED       MAF      Mutati… #> 3 STRUCTURAL_VARIANT      SV       Struct… #> # ℹ 5 more variables: description <chr>, #> #   showProfileInAnalysisTab <lgl>, #> #   patientLevel <lgl>, #> #   molecularProfileId <chr>, #> #   studyId <chr> available_profiles(study_id = \"blca_nmibc_2017\") %>%   pull(molecularProfileId) #> [1] \"blca_nmibc_2017_cna\"                 #> [2] \"blca_nmibc_2017_mutations\"           #> [3] \"blca_nmibc_2017_structural_variants\""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/articles/overview-of-workflow.html","id":"pulling-genomic-data","dir":"Articles","previous_headings":"","what":"Pulling Genomic Data","title":"Overview of Data Retrieval Workflow","text":"Now inspected studies confirmed genomic data available, pull data R environment. show two ways : Using study IDs (get_genetics_by_study()) Using sample ID-study ID pairs (get_genetics_by_sample()) Pulling study give us genomic data genes/panels included study. functions can pull data one study ID time return genomic data available study. Pulling study ID can efficient, good way ensure genomic information available cBioPortal particular study. working across multiple studies, need subset samples one multiple studies, may chose pull sample IDs instead study ID. pull sample IDs can pull specific samples across multiple studies, must also specify studies belong . may also pass specific list genes return information. don’t specify list genes function default returning available gene data sample.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/articles/overview-of-workflow.html","id":"by-study-ids","dir":"Articles","previous_headings":"Pulling Genomic Data","what":"By Study IDs","title":"Overview of Data Retrieval Workflow","text":"pull study ID, can pull data type individually. can pull genomic data time get_genetics_by_study() Finally, can join two studies together","code":"mut_blca <- get_mutations_by_study(study_id = \"blca_nmibc_2017\") #> ℹ Returning all data for the \"blca_nmibc_2017_mutations\" molecular profile in the \"blca_nmibc_2017\" study cna_blca<- get_cna_by_study(study_id = \"blca_nmibc_2017\") #> ℹ Returning all data for the \"blca_nmibc_2017_cna\" molecular profile in the \"blca_nmibc_2017\" study fus_blca <- get_fusions_by_study(study_id = \"blca_nmibc_2017\") #> ℹ Returning all data for the \"blca_nmibc_2017_structural_variants\" molecular profile in the \"blca_nmibc_2017\" study   mut_prad <- get_mutations_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study cna_prad <- get_cna_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study fus_prad <- get_fusions_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_structural_variants\" molecular profile in the \"prad_msk_2019\" study all_genomic_blca <- get_genetics_by_study(\"blca_nmibc_2017\") #> ℹ Returning all data for the \"blca_nmibc_2017_mutations\" molecular profile in the \"blca_nmibc_2017\" study #> ℹ Returning all data for the \"blca_nmibc_2017_cna\" molecular profile in the \"blca_nmibc_2017\" study #> ℹ Returning all data for the \"blca_nmibc_2017_structural_variants\" molecular profile in the \"blca_nmibc_2017\" study all_genomic_prad <- get_genetics_by_study(\"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> ℹ Returning all data for the \"prad_msk_2019_structural_variants\" molecular profile in the \"prad_msk_2019\" study all_equal(mut_blca, all_genomic_blca$mutation) #> [1] TRUE all_equal(cna_blca, all_genomic_blca$cna) #> [1] TRUE all_equal(fus_blca, all_genomic_blca$structural_variant) #> [1] TRUE mut_study <- bind_rows(mut_blca, mut_prad) cna_study <- bind_rows(cna_blca, cna_prad) fus_study <- bind_rows(fus_blca, fus_prad)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/articles/overview-of-workflow.html","id":"by-sample-ids","dir":"Articles","previous_headings":"Pulling Genomic Data","what":"By Sample IDs","title":"Overview of Data Retrieval Workflow","text":"pull sample IDs, can pull specific samples across multiple studies. example, can pull studies time select set samples using sample_study_pairs argument get_genetics_by_sample(). Let’s pull data first 10 samples study. first need construct dataframe pass function: Note: can also run available_samples(sample_list_id = <sample list ID>) pull sample IDs specific sample list ID (see available_sample_lists()), available_patients() pull patient IDs need rename columns per functions documentation. Now pass get_genetics_by_sample() Like querying study ID, can also pull data individually genomic data type: Let’s compare results ones got pulling study: results equal. Note: studies also copy number segments data available can pulled study ID sample ID:","code":"s1 <- available_samples(\"blca_nmibc_2017\") %>%   select(sampleId, patientId, studyId) %>%   head(10)  s2 <- available_samples(\"prad_msk_2019\") %>%   select(sampleId,  patientId, studyId) %>%   head(10)  df_pairs <- bind_rows(s1, s2) %>%   select(-patientId) df_pairs <- df_pairs %>%   rename(\"sample_id\" = sampleId,          \"study_id\" = studyId) all_genomic <- get_genetics_by_sample(sample_study_pairs = df_pairs) #> Joining with `by = join_by(study_id)` #> The following parameters were used in #> query: #> Study ID: \"blca_nmibc_2017\" and #> \"prad_msk_2019\" #> Molecular Profile ID: #> blca_nmibc_2017_mutations and #> prad_msk_2019_mutations #> Genes: \"All available genes\" #> Joining with `by = join_by(study_id)` #> The following parameters were used in #> query: #> Study ID: \"blca_nmibc_2017\" and #> \"prad_msk_2019\" #> Molecular Profile ID: blca_nmibc_2017_cna #> and prad_msk_2019_cna #> Genes: \"All available genes\" #> Joining with `by = join_by(study_id)` #> The following parameters were used in #> query: #> Study ID: \"blca_nmibc_2017\" and #> \"prad_msk_2019\" #> Molecular Profile ID: #> blca_nmibc_2017_structural_variants and #> prad_msk_2019_structural_variants #> Genes: \"All available genes\"  mut_sample <- all_genomic$mutation mut_only <- get_mutations_by_sample(sample_study_pairs = df_pairs) #> Joining with `by = join_by(study_id)` #> The following parameters were used in #> query: #> Study ID: \"blca_nmibc_2017\" and #> \"prad_msk_2019\" #> Molecular Profile ID: #> blca_nmibc_2017_mutations and #> prad_msk_2019_mutations #> Genes: \"All available genes\"  identical(mut_only, mut_sample) #> [1] TRUE # filter to our subset used in sample query mut_study_subset <- mut_study %>%   filter(sampleId %in%  df_pairs$sample_id)  # arrange to compare mut_study_subset <- mut_study_subset %>%   arrange(desc(sampleId))%>%   arrange(desc(entrezGeneId))  mut_sample <- mut_sample %>%   arrange(desc(sampleId)) %>%   arrange(desc(entrezGeneId)) %>%    # reorder so columns in same order   select(names(mut_study_subset))  all.equal(mut_study_subset, mut_sample) #> [1] TRUE seg_blca <- get_segments_by_study(\"blca_nmibc_2017\") #> ℹ Returning all \"copy number segmentation\" data for the \"blca_nmibc_2017\" study  # To pull alongside other genomic data types, use the `return_segments` argument all_genomic_blca <- get_genetics_by_study(\"blca_nmibc_2017\", return_segments = TRUE) #> ℹ Returning all data for the \"blca_nmibc_2017_mutations\" molecular profile in the \"blca_nmibc_2017\" study #> ℹ Returning all data for the \"blca_nmibc_2017_cna\" molecular profile in the \"blca_nmibc_2017\" study #> ℹ Returning all data for the \"blca_nmibc_2017_structural_variants\" molecular profile in the \"blca_nmibc_2017\" study #> ℹ Returning all \"copy number segmentation\" data for the \"blca_nmibc_2017\" study"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/articles/overview-of-workflow.html","id":"limit-results-to-specified-genes-or-panels","dir":"Articles","previous_headings":"Pulling Genomic Data > By Sample IDs","what":"Limit Results to Specified Genes or Panels","title":"Overview of Data Retrieval Workflow","text":"pulling sample IDs, can also limit results specific set genes passing vector Entrez Gene IDs Hugo Symbols gene argument, specified panel passing panel ID panel argument (see available_gene_panels() supported panels). can useful , example, want pull IMPACT gene results two studies one two uses much larger panel. case, can limit query just genes want results:","code":"by_hugo <- get_mutations_by_sample(sample_study_pairs = df_pairs, genes = \"TP53\") #> Joining with `by = join_by(study_id)` #> The following parameters were used in #> query: #> Study ID: \"blca_nmibc_2017\" and #> \"prad_msk_2019\" #> Molecular Profile ID: #> blca_nmibc_2017_mutations and #> prad_msk_2019_mutations #> Genes: \"TP53\" by_gene_id <- get_mutations_by_sample(sample_study_pairs = df_pairs, genes = 7157) #> Joining with `by = join_by(study_id)` #> The following parameters were used in #> query: #> Study ID: \"blca_nmibc_2017\" and #> \"prad_msk_2019\" #> Molecular Profile ID: #> blca_nmibc_2017_mutations and #> prad_msk_2019_mutations #> Genes: 7157  identical(by_hugo, by_gene_id) #> [1] TRUE get_mutations_by_sample(   sample_study_pairs = df_pairs,   panel = \"IMPACT468\") %>%   head() #> Joining with `by = join_by(study_id)` #> The following parameters were used in #> query: #> Study ID: \"blca_nmibc_2017\" and #> \"prad_msk_2019\" #> Molecular Profile ID: #> blca_nmibc_2017_mutations and #> prad_msk_2019_mutations #> Genes: \"IMPACT468\" #> # A tibble: 6 × 28 #>   hugoGeneSymbol entrezGeneId #>   <chr>                 <int> #> 1 SMAD4                  4089 #> 2 TERT                   7015 #> 3 ERBB4                  2066 #> 4 CUL3                   8452 #> 5 PBRM1                 55193 #> 6 APC                     324 #> # ℹ 26 more variables: #> #   uniqueSampleKey <chr>, #> #   uniquePatientKey <chr>, #> #   molecularProfileId <chr>, #> #   sampleId <chr>, patientId <chr>, #> #   studyId <chr>, center <chr>, #> #   mutationStatus <chr>, …"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/articles/overview-of-workflow.html","id":"pulling-clinical-data-sample-metadata","dir":"Articles","previous_headings":"","what":"Pulling Clinical Data & Sample Metadata","title":"Overview of Data Retrieval Workflow","text":"can also pull clinical data study ID, sample ID, patient ID. Pulling sample ID pull sample-level characteristics (e.g. sample site, tumor stage sampling time variables collected time sampling may available). Pulling patient ID pull patient-level characteristics (e.g. age, sex, etc.). Pulling study ID pull sample patient-level characteristics . can explore clinical data available study using: select set available studies: pulls data sample level: pulls data patient level: Like genomic data pull functions, can also pull clinical data data frame sample ID - study ID pairs, data frame patient ID - study ID pairs. , pull patient ID - study ID pairs. First, construct data frame pairs pass: Now pass data frame get_genetics_by_patient()","code":"attr_blca <- available_clinical_attributes(\"blca_nmibc_2017\") attr_prad <- available_clinical_attributes(\"prad_msk_2019\")  attr_prad #> # A tibble: 13 × 7 #>    displayName        description datatype #>    <chr>              <chr>       <chr>    #>  1 Cancer Type        Cancer Type STRING   #>  2 Cancer Type Detai… Cancer Typ… STRING   #>  3 Fraction Genome A… Fraction G… NUMBER   #>  4 Gene Panel         Gene Panel. STRING   #>  5 Mutation Count     Mutation C… NUMBER   #>  6 Oncotree Code      Oncotree C… STRING   #>  7 Sample Class       The sample… STRING   #>  8 Number of Samples… Number of … STRING   #>  9 Sample Type        The type o… STRING   #> 10 Sex                Sex         STRING   #> 11 Somatic Status     Somatic St… STRING   #> 12 Specimen Preserva… The method… STRING   #> 13 TMB (nonsynonymou… TMB (nonsy… NUMBER   #> # ℹ 4 more variables: #> #   patientAttribute <lgl>, #> #   priority <chr>, #> #   clinicalAttributeId <chr>, #> #   studyId <chr> in_both <- intersect(attr_blca$clinicalAttributeId, attr_prad$clinicalAttributeId) clinical_blca <- get_clinical_by_sample(sample_id = s1$sampleId,                        study_id = \"blca_nmibc_2017\",                        clinical_attribute = in_both)  clinical_prad <- get_clinical_by_sample(sample_id = s2$sampleId,                        study_id = \"prad_msk_2019\",                        clinical_attribute = in_both)  all_clinical <- bind_rows(clinical_blca, clinical_prad)  all_clinical %>%   select(-contains(\"unique\")) %>%   head() #> # A tibble: 6 × 5 #>   sampleId          patientId studyId      #>   <chr>             <chr>     <chr>        #> 1 P-0001453-T01-IM3 P-0001453 blca_nmibc_… #> 2 P-0001453-T01-IM3 P-0001453 blca_nmibc_… #> 3 P-0001453-T01-IM3 P-0001453 blca_nmibc_… #> 4 P-0001453-T01-IM3 P-0001453 blca_nmibc_… #> 5 P-0001453-T01-IM3 P-0001453 blca_nmibc_… #> 6 P-0001453-T01-IM3 P-0001453 blca_nmibc_… #> # ℹ 2 more variables: #> #   clinicalAttributeId <chr>, #> #   value <chr> p1 <- available_patients(\"blca_nmibc_2017\")  clinical_blca <- get_clinical_by_patient(patient_id = s1$patientId,                        study_id = \"blca_nmibc_2017\",                        clinical_attribute = in_both)  clinical_prad <- get_clinical_by_patient(patient_id = s2$patientId,                        study_id = \"prad_msk_2019\",                        clinical_attribute = in_both)  all_clinical <- bind_rows(clinical_blca, clinical_prad)  all_clinical %>%   select(-contains(\"unique\")) %>%   head() #> # A tibble: 6 × 4 #>   patientId studyId    clinicalAttributeId #>   <chr>     <chr>      <chr>               #> 1 P-0001453 blca_nmib… SAMPLE_COUNT        #> 2 P-0001453 blca_nmib… SEX                 #> 3 P-0002166 blca_nmib… SAMPLE_COUNT        #> 4 P-0002166 blca_nmib… SEX                 #> 5 P-0003238 blca_nmib… SAMPLE_COUNT        #> 6 P-0003238 blca_nmib… SEX                 #> # ℹ 1 more variable: value <chr> df_pairs <- bind_rows(s1, s2) %>%   select(-sampleId)  df_pairs <- df_pairs %>%   select(patientId, studyId) all_patient_clinical <- get_clinical_by_patient(patient_study_pairs = df_pairs,                                                 clinical_attribute = in_both)  all_patient_clinical %>%   select(-contains(\"unique\")) #> # A tibble: 34 × 4 #>    patientId studyId   clinicalAttributeId #>    <chr>     <chr>     <chr>               #>  1 P-0001453 blca_nmi… SAMPLE_COUNT        #>  2 P-0001453 blca_nmi… SEX                 #>  3 P-0002166 blca_nmi… SAMPLE_COUNT        #>  4 P-0002166 blca_nmi… SEX                 #>  5 P-0003238 blca_nmi… SAMPLE_COUNT        #>  6 P-0003238 blca_nmi… SEX                 #>  7 P-0003257 blca_nmi… SAMPLE_COUNT        #>  8 P-0003257 blca_nmi… SEX                 #>  9 P-0003261 blca_nmi… SAMPLE_COUNT        #> 10 P-0003261 blca_nmi… SEX                 #> # ℹ 24 more rows #> # ℹ 1 more variable: value <chr>"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karissa Whiting. Author, maintainer.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Whiting K (2024). cbioportalR: Browse Query Clinical Genomic Data cBioPortal. R package version 1.1.0.9000, https://www.karissawhiting.com/cbioportalR/, https://github.com/karissawhiting/cbioportalR.","code":"@Manual{,   title = {cbioportalR: Browse and Query Clinical and Genomic Data from cBioPortal},   author = {Karissa Whiting},   year = {2024},   note = {R package version 1.1.0.9000,     https://www.karissawhiting.com/cbioportalR/},   url = {https://github.com/karissawhiting/cbioportalR}, }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/index.html","id":"cbioportalr-","dir":"","previous_headings":"","what":"cbioportalR","title":"Browse and Query Clinical and Genomic Data from cBioPortal","text":"{cbioportalR} allows access cBioPortal’s genomic clinical data sets directly R. package wraps cBioPortal’s API endpoints R users can easily leverage existing API access genomic data mutations, copy number alterations fusions well data tumor mutational burden (TMB), microsatellite instability status (MSI) select clinical data points (depending study). package created work public cBioPortal website, well private institutional cBioPortal instances (e.g. MSKCC, GENIE) appropriate credentials authentication. package compatible cBioPortal v5, subject change cBioPortal updates released. see cBioPortal instance compatible, look version footer homepage check portalVersion output YOUR_CBIOPORTAL_INSTANCE/api/info. information cBioPortal, see following publications: Gao et al. Sci. Signal. 2013 Cerami et al. Cancer Discov. 2012 full documentation cBioPortal API, please see following links: cBioPortal API API Clients documentation Full reference documentation API Note: MSK researcher working IMPACT data, connect MSK’s cBioPortal instance get date IMPACT data, must follow MSK-IMPACT publication guidelines using data {cbioportalR} part gnomeverse, collection R packages designed work together seamlessly create reproducible clinico-genomic analysis pipelines.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Browse and Query Clinical and Genomic Data from cBioPortal","text":"can install {cbioportalR} following code: Install development version {cbioportalR} : Load package:","code":"install.packages(\"cbioportalR\") remotes::install_github(\"karissawhiting/cbioportalR\") library(cbioportalR)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"Browse and Query Clinical and Genomic Data from cBioPortal","text":"using public domain https://www.cbioportal.org/, don’t need token start pulling data. using private instance cBioPortal (like MSKCC’s institutional database), need acquire token save .Renviron file (wherever store credentials). Simply log institution’s cBioPortal site, acquire token (usually ‘Data Access Token’ link username menu upper right) save .Renviron file. save token environmental variable don’t hard code secret key scripts. Tip: following {usethis} function can easily find open .Renviron : Paste token given (using format ) .Renviron file save file changes. saving restart R session ensure token saved recognized. can test token saved using: every new R session, need set database URL. set_cbioportal_db() function set environmental variable session tells package database point API calls. can set point public database db = 'www.cbioportal.org' db = 'public'. using private database pass institutions cBioPortal URL db. function set URL check connection. now set remainder session! API calls depend internet connection possibly VPN connection can use following check connection time throughout session:","code":"usethis::edit_r_environ() CBIOPORTAL_TOKEN = 'YOUR_TOKEN' get_cbioportal_token() set_cbioportal_db(db = \"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\" test_cbioportal_db() #> ✔ You are successfully connected!"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/index.html","id":"cbioportal-data-model","dir":"","previous_headings":"","what":"cBioPortal Data Model","title":"Browse and Query Clinical and Genomic Data from cBioPortal","text":"many ways identify pull data (e.g. study ID, sample ID, molecular profile ID). understanding data organized cBioPortal help determine functions need. figure outlines general data schema cBioPortal functions access levels schema:","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Browse and Query Clinical and Genomic Data from cBioPortal","text":"see available studies database can use: view study metadata particular study can use: pull genomic data particular study can use: result, get list data frames mutation CNA data respectively. function also try pull fusion (structural variant) data, fusion data available study, indicated function message. can also pull data specific sample IDs API requires bit information (unlike pulling study ID returns everything available study). can useful working within large database working across samples housed multiple different studies. querying sample_id must also specify corresponding study_id samples housed. pieces information provided, {cbioportalR} makes informed guess based connection throw informative message clarify exactly queried. example , function defaults public version IMPACT database (study_id = \"msk_impact_2017\"). results returned samples stored study. specify correct study (study_id = \"acc_tcga\"), get accurate results. can check samples stored study using available_samples(study_id = \"acc_tcga\"). Lastly, can also pull clinical data sample metadata (e.g. tumor sample site) study ID, sample ID patient ID. see data available, can use: functions pull study IDs limited pulling data one study time. need pull specific samples multiple studies, likely want pull sample ID (instead study ID) supply function dataframe sample_study_pairs specify function look study. information see Overview Workflow Vignette.","code":"available_studies() %>%    head(n = 10) #> # A tibble: 10 × 13 #>    studyId name  description publicStudy pmid  citation groups status importDate #>    <chr>   <chr> <chr>       <lgl>       <chr> <chr>    <chr>   <int> <chr>      #>  1 acyc_m… Aden… Whole-exom… TRUE        2368… Ho et a… ACYC;…      0 2023-12-0… #>  2 acyc_f… Aden… Targeted S… TRUE        2441… Ross et… ACYC;…      0 2023-12-0… #>  3 acyc_j… Aden… Whole-geno… TRUE        2686… Rettig … ACYC;…      0 2023-12-0… #>  4 acyc_m… Aden… WGS of 21 … TRUE        2663… Mitani … ACYC;…      0 2023-12-0… #>  5 acyc_m… Aden… Whole-geno… TRUE        2682… Drier e… ACYC        0 2023-12-0… #>  6 acyc_s… Aden… Whole exom… TRUE        2377… Stephen… ACYC;…      0 2023-12-0… #>  7 acc_20… Aden… Multi-Inst… TRUE        3148… Allen e… ACYC;…      0 2023-12-0… #>  8 bcc_un… Basa… Whole-exom… TRUE        2695… Bonilla… PUBLIC      0 2023-12-0… #>  9 all_st… Acut… Comprehens… TRUE        2573… Anderss… PUBLIC      0 2023-12-0… #> 10 ampca_… Ampu… Exome sequ… TRUE        2680… Gingras… PUBLIC      0 2023-12-0… #> # ℹ 4 more variables: allSampleCount <int>, readPermission <lgl>, #> #   cancerTypeId <chr>, referenceGenome <chr> get_study_info(\"acc_tcga\") %>%    t() #>                             [,1]                                                                                                                                                                                              #> name                        \"Adrenocortical Carcinoma (TCGA, Firehose Legacy)\"                                                                                                                                                #> description                 \"TCGA Adrenocortical Carcinoma. Source data from <A HREF=\\\"http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/ACC/20160128/\\\">GDAC Firehose<\/A>. Previously known as TCGA Provisional.\" #> publicStudy                 \"TRUE\"                                                                                                                                                                                            #> groups                      \"PUBLIC\"                                                                                                                                                                                          #> status                      \"0\"                                                                                                                                                                                               #> importDate                  \"2024-01-19 09:11:57\"                                                                                                                                                                             #> allSampleCount              \"92\"                                                                                                                                                                                              #> sequencedSampleCount        \"90\"                                                                                                                                                                                              #> cnaSampleCount              \"90\"                                                                                                                                                                                              #> mrnaRnaSeqSampleCount       \"0\"                                                                                                                                                                                               #> mrnaRnaSeqV2SampleCount     \"79\"                                                                                                                                                                                              #> mrnaMicroarraySampleCount   \"0\"                                                                                                                                                                                               #> miRnaSampleCount            \"0\"                                                                                                                                                                                               #> methylationHm27SampleCount  \"0\"                                                                                                                                                                                               #> rppaSampleCount             \"46\"                                                                                                                                                                                              #> massSpectrometrySampleCount \"0\"                                                                                                                                                                                               #> completeSampleCount         \"75\"                                                                                                                                                                                              #> readPermission              \"TRUE\"                                                                                                                                                                                            #> treatmentCount              \"0\"                                                                                                                                                                                               #> structuralVariantCount      \"0\"                                                                                                                                                                                               #> studyId                     \"acc_tcga\"                                                                                                                                                                                        #> cancerTypeId                \"acc\"                                                                                                                                                                                             #> cancerType.name             \"Adrenocortical Carcinoma\"                                                                                                                                                                        #> cancerType.dedicatedColor   \"Purple\"                                                                                                                                                                                          #> cancerType.shortName        \"ACC\"                                                                                                                                                                                             #> cancerType.parent           \"adrenal_gland\"                                                                                                                                                                                   #> cancerType.cancerTypeId     \"acc\"                                                                                                                                                                                             #> referenceGenome             \"hg19\" df <- get_genetics_by_study(study_id = \"acc_tcga\") #> ℹ Returning all data for the \"acc_tcga_mutations\" molecular profile in the \"acc_tcga\" study #> ℹ Returning all data for the \"acc_tcga_gistic\" molecular profile in the \"acc_tcga\" study #> ! No \"structural_variant\" data returned. Error:  No molecular profile for `data_type = fusion` found in \"acc_tcga\".  See `available_profiles('acc_tcga')` df$mutation %>%    head() #> # A tibble: 6 × 28 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey  #>   <chr>                 <int> <chr>                            <chr>             #> 1 KRT8                   3856 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 2 LCE1B                353132 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 3 DNAH14               127602 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 4 KLRB1                  3820 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 5 SALL2                  6297 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 6 TMEM266              123591 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, #> #   chr <chr>, variantAllele <chr>, refseqMrnaId <chr>, …  df$cna %>%    head() #> # A tibble: 6 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey  #>   <chr>                 <int> <chr>                            <chr>             #> 1 MEF2B             100271849 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 2 FRS2                  10818 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 3 LRP1B                 53353 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 4 KMT2A                  4297 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 5 PC                     5091 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 6 CCNE1                   898 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int> samples <- available_samples(study_id = \"acc_tcga\") %>%   pull(sampleId) %>%   head(n = 10)  mutations <- get_mutations_by_sample(sample_id =  samples) #> The following parameters were used in query: #> Study ID: \"msk_impact_2017\" #> Molecular Profile ID: \"msk_impact_2017_mutations\" #> Genes: \"All available genes\"  # no results returned because these samples are not in this study length(mutations) == 0 #> [1] TRUE mutations <- get_mutations_by_sample(sample_id =  samples,                                     study_id = \"acc_tcga\") #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"acc_tcga_mutations\" #> Genes: \"All available genes\"  mutations %>%   head() #> # A tibble: 6 × 28 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey  #>   <chr>                 <int> <chr>                            <chr>             #> 1 KRT8                   3856 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 2 LCE1B                353132 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 3 DNAH14               127602 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 4 KLRB1                  3820 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 5 SALL2                  6297 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> 6 TMEM266              123591 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, #> #   chr <chr>, variantAllele <chr>, refseqMrnaId <chr>, … available_clinical_attributes(study_id = \"acc_tcga\") %>%   head() #> # A tibble: 6 × 7 #>   displayName description datatype patientAttribute priority clinicalAttributeId #>   <chr>       <chr>       <chr>    <lgl>            <chr>    <chr>               #> 1 Diagnosis … Age at whi… NUMBER   TRUE             1        AGE                 #> 2 Neoplasm D… The extent… STRING   TRUE             1        AJCC_PATHOLOGIC_TU… #> 3 American J… The versio… STRING   TRUE             1        AJCC_STAGING_EDITI… #> 4 Atypical M… Atypical M… STRING   TRUE             1        ATYPICAL_MITOTIC_F… #> 5 Cancer Type Cancer type STRING   FALSE            1        CANCER_TYPE         #> 6 Cancer Typ… Cancer typ… STRING   FALSE            1        CANCER_TYPE_DETAIL… #> # ℹ 1 more variable: studyId <chr> get_clinical_by_study(\"acc_tcga\") #> ! Sample Level Clinical Data: No `clinical_attribute` passed. Defaulting to returning all clinical attributes in \"acc_tcga\" study #> ! Patient Level Clinical Data: No `clinical_attribute` passed. Defaulting to returning all clinical attributes in \"acc_tcga\" study #> # A tibble: 6,292 × 7 #>    uniquePatientKey        patientId studyId clinicalAttributeId value dataLevel #>    <chr>                   <chr>     <chr>   <chr>               <chr> <chr>     #>  1 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… AGE                 58    PATIENT   #>  2 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… AJCC_PATHOLOGIC_TU… Stag… PATIENT   #>  3 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… ATYPICAL_MITOTIC_F… Atyp… PATIENT   #>  4 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… CAPSULAR_INVASION   Inva… PATIENT   #>  5 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… CLIN_M_STAGE        M0    PATIENT   #>  6 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… CT_SCAN_PREOP_RESU… [Unk… PATIENT   #>  7 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… CYTOPLASM_PRESENCE… Cyto… PATIENT   #>  8 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… DAYS_TO_INITIAL_PA… 0     PATIENT   #>  9 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… DFS_MONTHS          24.77 PATIENT   #> 10 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… DFS_STATUS          1:Re… PATIENT   #> # ℹ 6,282 more rows #> # ℹ 1 more variable: sampleId <chr> get_clinical_by_sample(sample_id = samples, study_id = \"acc_tcga\") %>%   head(10) #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"acc_tcga\" study #> # A tibble: 10 × 7 #>    uniqueSampleKey                  uniquePatientKey  sampleId patientId studyId #>    <chr>                            <chr>             <chr>    <chr>     <chr>   #>  1 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #>  2 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #>  3 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #>  4 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #>  5 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #>  6 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #>  7 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #>  8 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #>  9 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #> 10 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #> # ℹ 2 more variables: clinicalAttributeId <chr>, value <chr> patients <- available_patients(study_id = \"acc_tcga\") %>%   pull(patientId) %>%   head(n = 10)  get_clinical_by_patient(patient_id = patients, study_id = \"acc_tcga\",                          clinical_attribute = \"AGE\") %>%   head(10)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Browse and Query Clinical and Genomic Data from cBioPortal","text":"Please note {cbioportalR} released Contributor Code Conduct. contributing project, agree abide terms. Thank contributors! @arorarshi, @AxelitoMartin, @edrill, @jalavery, @ddsjoberg @karomanchuk @hfuchs5 @alrein-05 @stl2137 Thank Isaak Liptzin hex sticker!","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_clinical_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all available clinical attribute IDs for a study — available_clinical_attributes","title":"Get all available clinical attribute IDs for a study — available_clinical_attributes","text":"Get available clinical attribute IDs study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_clinical_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all available clinical attribute IDs for a study — available_clinical_attributes","text":"","code":"available_clinical_attributes(study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_clinical_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all available clinical attribute IDs for a study — available_clinical_attributes","text":"study_id cbioportal study ID base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_clinical_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all available clinical attribute IDs for a study — available_clinical_attributes","text":"data frame available clinical attributes study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_clinical_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all available clinical attribute IDs for a study — available_clinical_attributes","text":"","code":"# \\dontrun{ available_clinical_attributes(\"acc_tcga\", base_url = 'www.cbioportal.org/api') #> # A tibble: 109 × 7 #>    displayName                    description datatype patientAttribute priority #>    <chr>                          <chr>       <chr>    <lgl>            <chr>    #>  1 Diagnosis Age                  Age at whi… NUMBER   TRUE             1        #>  2 Neoplasm Disease Stage Americ… The extent… STRING   TRUE             1        #>  3 American Joint Committee on C… The versio… STRING   TRUE             1        #>  4 Atypical Mitotic Figures       Atypical M… STRING   TRUE             1        #>  5 Cancer Type                    Cancer type STRING   FALSE            1        #>  6 Cancer Type Detailed           Cancer typ… STRING   FALSE            1        #>  7 CAPSULAR INVASION              CAPSULAR I… STRING   TRUE             1        #>  8 Neoplasm American Joint Commi… Stage grou… STRING   TRUE             1        #>  9 Clinical Status Within 3 Mths… Clinical S… STRING   TRUE             1        #> 10 Neoplasm American Joint Commi… Extent of … STRING   TRUE             1        #> # ℹ 99 more rows #> # ℹ 2 more variables: clinicalAttributeId <chr>, studyId <chr> # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_gene_panels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Available Gene Panels For a Database — available_gene_panels","title":"Get Available Gene Panels For a Database — available_gene_panels","text":"Get Available Gene Panels Database","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_gene_panels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Available Gene Panels For a Database — available_gene_panels","text":"","code":"available_gene_panels(base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_gene_panels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Available Gene Panels For a Database — available_gene_panels","text":"base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_gene_panels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Available Gene Panels For a Database — available_gene_panels","text":"dataframe metadata regarding available panel","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_gene_panels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Available Gene Panels For a Database — available_gene_panels","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_gene_panels() #> # A tibble: 69 × 2 #>    description                                                       genePanelId #>    <chr>                                                             <chr>       #>  1 Targeted (27 cancer genes) sequencing of adenoid cystic carcinom… ACYC_FMI_27 #>  2 Targeted panel of 232 genes.                                      Agilent     #>  3 Targeted panel of 8 genes.                                        AmpliSeq    #>  4 ARCHER-HEME gene panel (199 genes)                                ARCHER-HEM… #>  5 ARCHER-SOLID Gene Panel (62 genes)                                ARCHER-SOL… #>  6 Targeted sequencing of various tumor types via bait v3.           bait_v3     #>  7 Targeted sequencing of various tumor types via bait v4.           bait_v4     #>  8 Targeted sequencing of various tumor types via bait v5.           bait_v5     #>  9 Targeted panel of 387 cancer-related genes.                       bcc_unige_… #> 10 Research (CMO) IMPACT-Heme gene panel version 3.                  HemePACT_v3 #> # ℹ 59 more rows # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_patients.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Patient IDs in a Study — available_patients","title":"Get All Patient IDs in a Study — available_patients","text":"Get Patient IDs Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_patients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Patient IDs in a Study — available_patients","text":"","code":"available_patients(study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_patients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Patient IDs in a Study — available_patients","text":"study_id character string indicating study ID searched. 1 study ID allowed. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_patients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Patient IDs in a Study — available_patients","text":"dataframe patient_ids given study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_patients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Patient IDs in a Study — available_patients","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_samples(study_id = \"acc_tcga\") #> # A tibble: 92 × 4 #>    patientId    sampleId        sampleType          studyId  #>    <chr>        <chr>           <chr>               <chr>    #>  1 TCGA-OR-A5J1 TCGA-OR-A5J1-01 Primary Solid Tumor acc_tcga #>  2 TCGA-OR-A5J2 TCGA-OR-A5J2-01 Primary Solid Tumor acc_tcga #>  3 TCGA-OR-A5J3 TCGA-OR-A5J3-01 Primary Solid Tumor acc_tcga #>  4 TCGA-OR-A5J4 TCGA-OR-A5J4-01 Primary Solid Tumor acc_tcga #>  5 TCGA-OR-A5J5 TCGA-OR-A5J5-01 Primary Solid Tumor acc_tcga #>  6 TCGA-OR-A5J6 TCGA-OR-A5J6-01 Primary Solid Tumor acc_tcga #>  7 TCGA-OR-A5J7 TCGA-OR-A5J7-01 Primary Solid Tumor acc_tcga #>  8 TCGA-OR-A5J8 TCGA-OR-A5J8-01 Primary Solid Tumor acc_tcga #>  9 TCGA-OR-A5J9 TCGA-OR-A5J9-01 Primary Solid Tumor acc_tcga #> 10 TCGA-OR-A5JA TCGA-OR-A5JA-01 Primary Solid Tumor acc_tcga #> # ℹ 82 more rows # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Available Genomic Profiles For a Study or Database — available_profiles","title":"Get Available Genomic Profiles For a Study or Database — available_profiles","text":"Get Available Genomic Profiles Study Database","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Available Genomic Profiles For a Study or Database — available_profiles","text":"","code":"available_profiles(study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_profiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Available Genomic Profiles For a Study or Database — available_profiles","text":"study_id character vector length 1 indicating study_id. See get_studies() see available studies URL. NULL, return profiles current database url base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_profiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Available Genomic Profiles For a Study or Database — available_profiles","text":"dataframe available genetic profiles profile ids","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_profiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Available Genomic Profiles For a Study or Database — available_profiles","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_profiles() #> ℹ No `study_id` provided. Returning all available genomic profiles for <www.cbioportal.org/api> #> # A tibble: 2,245 × 11 #>    molecularAlterationType datatype name      description showProfileInAnalysi…¹ #>    <chr>                   <chr>    <chr>     <chr>       <lgl>                  #>  1 COPY_NUMBER_ALTERATION  DISCRETE Putative… Putative c… TRUE                   #>  2 MUTATION_EXTENDED       MAF      Mutations Somatic mu… TRUE                   #>  3 STRUCTURAL_VARIANT      SV       Structur… Structural… TRUE                   #>  4 COPY_NUMBER_ALTERATION  DISCRETE Putative… Putative c… TRUE                   #>  5 MUTATION_EXTENDED       MAF      Mutations Comprehens… TRUE                   #>  6 MUTATION_EXTENDED       MAF      Mutations Somatic mu… TRUE                   #>  7 STRUCTURAL_VARIANT      SV       Structur… Structural… TRUE                   #>  8 MUTATION_EXTENDED       MAF      Mutations WGS of 28 … TRUE                   #>  9 STRUCTURAL_VARIANT      SV       Structur… Structural… TRUE                   #> 10 MUTATION_EXTENDED       MAF      Mutations Mutation d… TRUE                   #> # ℹ 2,235 more rows #> # ℹ abbreviated name: ¹​showProfileInAnalysisTab #> # ℹ 6 more variables: patientLevel <lgl>, molecularProfileId <chr>, #> #   studyId <chr>, genericAssayType <chr>, pivotThreshold <dbl>, #> #   sortOrder <chr> available_profiles(study_id = \"acc_tcga\") #> # A tibble: 9 × 8 #>   molecularAlterationType datatype   name     description showProfileInAnalysi…¹ #>   <chr>                   <chr>      <chr>    <chr>       <lgl>                  #> 1 PROTEIN_LEVEL           LOG2-VALUE Protein… Protein ex… FALSE                  #> 2 PROTEIN_LEVEL           Z-SCORE    Protein… Protein ex… TRUE                   #> 3 COPY_NUMBER_ALTERATION  DISCRETE   Putativ… Putative c… TRUE                   #> 4 COPY_NUMBER_ALTERATION  CONTINUOUS Capped … Capped rel… FALSE                  #> 5 MUTATION_EXTENDED       MAF        Mutatio… Mutation d… TRUE                   #> 6 METHYLATION             CONTINUOUS Methyla… Methylatio… FALSE                  #> 7 MRNA_EXPRESSION         CONTINUOUS mRNA ex… mRNA gene … FALSE                  #> 8 MRNA_EXPRESSION         Z-SCORE    mRNA ex… mRNA expre… TRUE                   #> 9 MRNA_EXPRESSION         Z-SCORE    mRNA ex… Log-transf… TRUE                   #> # ℹ abbreviated name: ¹​showProfileInAnalysisTab #> # ℹ 3 more variables: patientLevel <lgl>, molecularProfileId <chr>, #> #   studyId <chr> # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_sample_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Sample Lists Available For a Study — available_sample_lists","title":"Get All Sample Lists Available For a Study — available_sample_lists","text":"Get Sample Lists Available Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_sample_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Sample Lists Available For a Study — available_sample_lists","text":"","code":"available_sample_lists(study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_sample_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Sample Lists Available For a Study — available_sample_lists","text":"study_id character string indicating study ID searched. 1 study ID allowed. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_sample_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Sample Lists Available For a Study — available_sample_lists","text":"dataframe patient_ids given study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_sample_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Sample Lists Available For a Study — available_sample_lists","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_sample_lists(study_id = \"acc_tcga\") #> # A tibble: 9 × 5 #>   category                                name  description sampleListId studyId #>   <chr>                                   <chr> <chr>       <chr>        <chr>   #> 1 all_cases_with_mrna_rnaseq_data         Samp… Samples wi… acc_tcga_rn… acc_tc… #> 2 all_cases_in_study                      All … All sample… acc_tcga_all acc_tc… #> 3 all_cases_with_cna_data                 Samp… Samples wi… acc_tcga_cna acc_tc… #> 4 all_cases_with_mutation_and_cna_data    Samp… Samples wi… acc_tcga_cn… acc_tc… #> 5 all_cases_with_mutation_and_cna_and_mr… Comp… Samples wi… acc_tcga_3w… acc_tc… #> 6 all_cases_with_methylation_data         Samp… Samples wi… acc_tcga_me… acc_tc… #> 7 all_cases_with_methylation_data         Samp… Samples wi… acc_tcga_me… acc_tc… #> 8 all_cases_with_rppa_data                Samp… Samples pr… acc_tcga_rp… acc_tc… #> 9 all_cases_with_mutation_data            Samp… Samples wi… acc_tcga_se… acc_tc… # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Sample IDs in a Study — available_samples","title":"Get All Sample IDs in a Study — available_samples","text":"Pulls available sample IDs given study ID sample list ID. Either study ID sample list ID must passed. sample_list study_id NULL, sample_list ID searched study_id ignored.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Sample IDs in a Study — available_samples","text":"","code":"available_samples(study_id = NULL, sample_list_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Sample IDs in a Study — available_samples","text":"study_id character string indicating study ID searched. 1 study ID allowed. sample_list_id character string indicating sample list ID searched. 1 sample list ID allowed. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Sample IDs in a Study — available_samples","text":"dataframe sample_ids given study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Sample IDs in a Study — available_samples","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_samples(study_id = \"acc_tcga\") #> # A tibble: 92 × 4 #>    patientId    sampleId        sampleType          studyId  #>    <chr>        <chr>           <chr>               <chr>    #>  1 TCGA-OR-A5J1 TCGA-OR-A5J1-01 Primary Solid Tumor acc_tcga #>  2 TCGA-OR-A5J2 TCGA-OR-A5J2-01 Primary Solid Tumor acc_tcga #>  3 TCGA-OR-A5J3 TCGA-OR-A5J3-01 Primary Solid Tumor acc_tcga #>  4 TCGA-OR-A5J4 TCGA-OR-A5J4-01 Primary Solid Tumor acc_tcga #>  5 TCGA-OR-A5J5 TCGA-OR-A5J5-01 Primary Solid Tumor acc_tcga #>  6 TCGA-OR-A5J6 TCGA-OR-A5J6-01 Primary Solid Tumor acc_tcga #>  7 TCGA-OR-A5J7 TCGA-OR-A5J7-01 Primary Solid Tumor acc_tcga #>  8 TCGA-OR-A5J8 TCGA-OR-A5J8-01 Primary Solid Tumor acc_tcga #>  9 TCGA-OR-A5J9 TCGA-OR-A5J9-01 Primary Solid Tumor acc_tcga #> 10 TCGA-OR-A5JA TCGA-OR-A5JA-01 Primary Solid Tumor acc_tcga #> # ℹ 82 more rows available_samples(sample_list_id = \"acc_tcga_cna\") #> # A tibble: 90 × 2 #>    sampleId        sampleListId #>    <chr>           <chr>        #>  1 TCGA-OR-A5J1-01 acc_tcga_cna #>  2 TCGA-OR-A5J2-01 acc_tcga_cna #>  3 TCGA-OR-A5J3-01 acc_tcga_cna #>  4 TCGA-OR-A5J4-01 acc_tcga_cna #>  5 TCGA-OR-A5J5-01 acc_tcga_cna #>  6 TCGA-OR-A5J6-01 acc_tcga_cna #>  7 TCGA-OR-A5J7-01 acc_tcga_cna #>  8 TCGA-OR-A5J8-01 acc_tcga_cna #>  9 TCGA-OR-A5J9-01 acc_tcga_cna #> 10 TCGA-OR-A5JA-01 acc_tcga_cna #> # ℹ 80 more rows # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_studies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Metadata on All Available Studies in a Database — available_studies","title":"Get Metadata on All Available Studies in a Database — available_studies","text":"Get Metadata Available Studies Database","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_studies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Metadata on All Available Studies in a Database — available_studies","text":"","code":"available_studies(base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_studies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Metadata on All Available Studies in a Database — available_studies","text":"base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_studies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Metadata on All Available Studies in a Database — available_studies","text":"dataframe available studies metadata","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/available_studies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Metadata on All Available Studies in a Database — available_studies","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_studies() #> # A tibble: 469 × 13 #>    studyId name  description publicStudy pmid  citation groups status importDate #>    <chr>   <chr> <chr>       <lgl>       <chr> <chr>    <chr>   <int> <chr>      #>  1 acyc_m… Aden… Whole-exom… TRUE        2368… Ho et a… ACYC;…      0 2023-12-0… #>  2 acyc_f… Aden… Targeted S… TRUE        2441… Ross et… ACYC;…      0 2023-12-0… #>  3 acyc_j… Aden… Whole-geno… TRUE        2686… Rettig … ACYC;…      0 2023-12-0… #>  4 acyc_m… Aden… WGS of 21 … TRUE        2663… Mitani … ACYC;…      0 2023-12-0… #>  5 acyc_m… Aden… Whole-geno… TRUE        2682… Drier e… ACYC        0 2023-12-0… #>  6 acyc_s… Aden… Whole exom… TRUE        2377… Stephen… ACYC;…      0 2023-12-0… #>  7 acc_20… Aden… Multi-Inst… TRUE        3148… Allen e… ACYC;…      0 2023-12-0… #>  8 bcc_un… Basa… Whole-exom… TRUE        2695… Bonilla… PUBLIC      0 2023-12-0… #>  9 all_st… Acut… Comprehens… TRUE        2573… Anderss… PUBLIC      0 2023-12-0… #> 10 ampca_… Ampu… Exome sequ… TRUE        2680… Gingras… PUBLIC      0 2023-12-0… #> # ℹ 459 more rows #> # ℹ 4 more variables: allSampleCount <int>, readPermission <lgl>, #> #   cancerTypeId <chr>, referenceGenome <chr> # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/cbioportalR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cbioportalR: Browse and Query Clinical and Genomic Data from cBioPortal — cbioportalR-package","title":"cbioportalR: Browse and Query Clinical and Genomic Data from cBioPortal — cbioportalR-package","text":"Provides R users direct access genomic clinical data 'cBioPortal' web resource via user-friendly functions wrap 'cBioPortal's' existing API endpoints https://www.cbioportal.org/api/swagger-ui/index.html. Users can browse query genomic data mutations, copy number alterations fusions, well data tumor mutational burden ('TMB'), microsatellite instability status ('MSI'), 'FACETS' select clinical data points (depending study). See https://www.cbioportal.org/ Gao et al., (2013) doi:10.1126/scisignal.2004088  information cBioPortal web resource.","code":""},{"path":[]},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/cbioportalR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cbioportalR: Browse and Query Clinical and Genomic Data from cBioPortal — cbioportalR-package","text":"Maintainer: Karissa Whiting karissa.whiting@gmail.com (ORCID)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/cbp_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Core function to retrieve data from cBioPortal API. — cbp_api","title":"Core function to retrieve data from cBioPortal API. — cbp_api","text":"Core function retrieve data cBioPortal API.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/cbp_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Core function to retrieve data from cBioPortal API. — cbp_api","text":"","code":"cbp_api(   url_path,   method = NULL,   token = get_cbioportal_token(),   body = NULL,   extra_box = FALSE,   quiet = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/cbp_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Core function to retrieve data from cBioPortal API. — cbp_api","text":"url_path url path API call method API method use. Must \"get\" \"post\". Default \"get\". token Authentication token, needed. Default get_cbioportal_token() body Arguments passed API call (e.g. sample ID gene IDs) extra_box functions require additional list() wrapping around body idk quiet Returns queried URL. Default TRUE base_url database URL query","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/cbp_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Core function to retrieve data from cBioPortal API. — cbp_api","text":"parsed API response","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/cbp_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Core function to retrieve data from cBioPortal API. — cbp_api","text":"","code":"# \\dontrun{ cbp_api(url_path = \"genes/TP53\", base_url = \"public\") #> $content #> $content$entrezGeneId #> [1] 7157 #>  #> $content$hugoGeneSymbol #> [1] \"TP53\" #>  #> $content$type #> [1] \"protein-coding\" #>  #>  #> $path #> [1] \"api/genes/TP53\" #>  #> $response #> Response [https://www.cbioportal.org/api/genes/TP53] #>   Date: 2024-10-15 14:47 #>   Status: 200 #>   Content-Type: application/json #>   Size: 69 B #>  #>  #> attr(,\"class\") #> [1] \"cbp_api\" # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_clinical_by_list_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","title":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","text":"Get clinical data attribute, study ID sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_clinical_by_list_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","text":"","code":".get_clinical_by_list_item(   study_id = NULL,   sample_id = NULL,   clinical_attribute = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_clinical_by_list_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs sample_id vector sample IDs (character) clinical_attribute one clinical attributes study. none provided, return attributes available studies base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_clinical_by_list_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","text":"dataframe specific clinical attribute","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_clinical_by_list_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","text":"","code":"# \\dontrun{ .get_clinical_by_list_item(study_id = \"acc_tcga\", sample_id = \"TCGA-OR-A5J2-01\",  clinical_attribute = \"CANCER_TYPE\", base_url = 'www.cbioportal.org/api') #> # A tibble: 1 × 7 #>   uniqueSampleKey                  uniquePatientKey   sampleId patientId studyId #>   <chr>                            <chr>              <chr>    <chr>     <chr>   #> 1 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUoyO… TCGA-OR… TCGA-OR-… acc_tc… #> # ℹ 2 more variables: clinicalAttributeId <chr>, value <chr>  # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_clinical_pat_by_list_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","title":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","text":"Get clinical data attribute, study ID patient ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_clinical_pat_by_list_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","text":"","code":".get_clinical_pat_by_list_item(   study_id = NULL,   patient_id = NULL,   clinical_attribute = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_clinical_pat_by_list_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs patient_id cBioPortal patient_id clinical_attribute one clinical attributes study. none provided, return attributes available studies base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_clinical_pat_by_list_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","text":"dataframe specific clinical attribute","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_clinical_pat_by_list_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","text":"","code":"# \\dontrun{ .get_clinical_pat_by_list_item(study_id = \"msk_impact_2017\",  patient_id = \"P-0001453\",   base_url = 'www.cbioportal.org/api') #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"msk_impact_2017\" study #> # A tibble: 6 × 5 #>   uniquePatientKey                   patientId studyId clinicalAttributeId value #>   <chr>                              <chr>     <chr>   <chr>               <chr> #> 1 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_im… OS_MONTHS           30.47 #> 2 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_im… OS_STATUS           0:LI… #> 3 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_im… SAMPLE_COUNT        1     #> 4 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_im… SEX                 Male  #> 5 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_im… SMOKING_HISTORY     Prev… #> 6 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_im… VITAL_STATUS        ALIVE   # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_data_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","title":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","text":"Internal Function Get Mutations/CNA/Fusion Sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_data_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","text":"","code":".get_data_by_sample(   sample_id = NULL,   study_id = NULL,   molecular_profile_id = NULL,   sample_study_pairs = NULL,   data_type = c(\"mutation\", \"cna\", \"fusion\", \"structural_variant\", \"segment\"),   genes = NULL,   panel = NULL,   add_hugo = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_data_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs molecular_profile_id string indicating molecular profile ID pull data. ID supplied, guess molecular profile ID based study ID. 1 molecular profile ID can passed. mutations 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. data_type specify type data return. Options aremutations, cna, fusion structural_variant (fusion). genes vector Entrez ids Hugo symbols. Hugo symbols supplied, converted entrez ids using get_entrez_id() function. panel genes supplied, genes arguments returned. NULL (default), return gene results available genomic data sample. panel One panel IDs query (e.g. 'IMPACT468'). panel genes supplied, genes arguments returned. NULL (default), return gene results available genomic data sample. add_hugo Logical indicating whether HugoGeneSymbol added resulting data frame, already present raw API results. Argument TRUE default. FALSE, results returned (.e. existing Hugo Symbol columns raw results removed). base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_data_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","text":"dataframe mutations, CNAs fusions.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_data_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  .get_data_by_sample(sample_id = c(\"TCGA-OR-A5J2-01\",\"TCGA-OR-A5J6-01\"),  study_id = \"acc_tcga\", data_type = \"mutation\") #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"acc_tcga_mutations\" #> Genes: \"All available genes\" #> # A tibble: 173 × 28 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey #>    <chr>                 <int> <chr>                            <chr>            #>  1 ZFPM1                161882 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  2 ZNF787               126208 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  3 PODXL                  5420 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  4 CCDC102A              92922 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  5 TVP23C               201158 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  6 ZNF628                89887 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  7 TBP                    6908 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  8 SEMA5B                54437 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  9 CELSR2                 1952 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #> 10 MUC5B                727897 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #> # ℹ 163 more rows #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, …  .get_data_by_sample(sample_id = c(\"DS-sig-010-P2\"),  molecular_profile_id = \"blca_plasmacytoid_mskcc_2016_cna\", data_type = \"cna\") #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" #> Molecular Profile ID: \"blca_plasmacytoid_mskcc_2016_cna\" #> Genes: \"All available genes\" #> # A tibble: 2 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 YAP1                  10413 RFMtc2lnLTAxMC1QMjpibGNhX3BsYXNt… RFMtc2lnLTAxMDp… #> 2 CD79B                   974 RFMtc2lnLTAxMC1QMjpibGNhX3BsYXNt… RFMtc2lnLTAxMDp… #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int>   .get_data_by_sample(sample_id = c(\"P-0002146-T01-IM3\"),  study_id = \"blca_plasmacytoid_mskcc_2016\", data_type = \"fusion\") #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" #> Molecular Profile ID: \"blca_plasmacytoid_mskcc_2016_structural_variants\" #> Genes: \"All available genes\" #> # A tibble: 1 × 44 #>   uniqueSampleKey uniquePatientKey molecularProfileId sampleId patientId studyId #>   <chr>           <chr>            <chr>              <chr>    <chr>     <chr>   #> 1 UC0wMDAyMTQ2LV… UC0wMDAyMTQ2OmJ… blca_plasmacytoid… P-00021… P-0002146 blca_p… #> # ℹ 38 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1EnsemblTranscriptId <chr>, site1Chromosome <chr>, site1Position <int>, #> #   site1Contig <chr>, site1Region <chr>, site1RegionNumber <int>, #> #   site1Description <chr>, site2EntrezGeneId <int>, site2HugoSymbol <chr>, #> #   site2EnsemblTranscriptId <chr>, site2Chromosome <chr>, site2Position <int>, #> #   site2Contig <chr>, site2Region <chr>, site2RegionNumber <int>, #> #   site2Description <chr>, site2EffectOnFrame <chr>, ncbiBuild <chr>, …  df_pairs <- data.frame( \"sample_id\" = c(\"s_C_36924L_P001_d\", \"s_C_03LNU8_P001_d\"), \"study_id\" = c(\"prad_msk_2019\"))  .get_data_by_sample(sample_study_pairs = df_pairs, data_type = \"mutation\") #> Joining with `by = join_by(study_id)` #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: prad_msk_2019_mutations #> Genes: \"All available genes\" #> # A tibble: 1 × 28 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 TP53                   7157 c19DXzAzTE5VOF9QMDAxX2Q6cHJhZF9t… cF9DXzAzTE5VODp… #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, #> #   chr <chr>, variantAllele <chr>, refseqMrnaId <chr>, … .get_data_by_sample(sample_study_pairs = df_pairs, genes = 7157, data_type = \"mutation\") #> Joining with `by = join_by(study_id)` #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: prad_msk_2019_mutations #> Genes: 7157 #> # A tibble: 1 × 28 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 TP53                   7157 c19DXzAzTE5VOF9QMDAxX2Q6cHJhZF9t… cF9DXzAzTE5VODp… #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, #> #   chr <chr>, variantAllele <chr>, refseqMrnaId <chr>, … .get_data_by_sample(sample_study_pairs = df_pairs, data_type = \"cna\") #> Joining with `by = join_by(study_id)` #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: prad_msk_2019_cna #> Genes: \"All available genes\" #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9QMDAxX2Q6cHJhZF9t… cF9DXzM2OTI0TDp… #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int> .get_data_by_sample(sample_study_pairs = df_pairs, data_type = \"fusion\") #> Joining with `by = join_by(study_id)` #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: prad_msk_2019_structural_variants #> Genes: \"All available genes\" #> # A tibble: 0 × 0  df_pairs2 <- data.frame( \"sample_id\" = c(\"P-0002146-T01-IM3\", \"s_C_CAUWT7_P001_d\"),  \"study_id\" = c(\"blca_plasmacytoid_mskcc_2016\", \"prad_msk_2019\"))  .get_data_by_sample(sample_study_pairs = df_pairs2, data_type = \"mutation\") #> Joining with `by = join_by(study_id)` #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_plasmacytoid_mskcc_2016_mutations and #> prad_msk_2019_mutations #> Genes: \"All available genes\" #> # A tibble: 7 × 28 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 TERT                   7015 UC0wMDAyMTQ2LVQwMS1JTTM6YmxjYV9w… UC0wMDAyMTQ2OmJ… #> 2 NOTCH4                 4855 UC0wMDAyMTQ2LVQwMS1JTTM6YmxjYV9w… UC0wMDAyMTQ2OmJ… #> 3 TP53                   7157 UC0wMDAyMTQ2LVQwMS1JTTM6YmxjYV9w… UC0wMDAyMTQ2OmJ… #> 4 BLM                     641 UC0wMDAyMTQ2LVQwMS1JTTM6YmxjYV9w… UC0wMDAyMTQ2OmJ… #> 5 TP53                   7157 UC0wMDAyMTQ2LVQwMS1JTTM6YmxjYV9w… UC0wMDAyMTQ2OmJ… #> 6 CDKN1A                 1026 UC0wMDAyMTQ2LVQwMS1JTTM6YmxjYV9w… UC0wMDAyMTQ2OmJ… #> 7 RB1                    5925 UC0wMDAyMTQ2LVQwMS1JTTM6YmxjYV9w… UC0wMDAyMTQ2OmJ… #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, chr <chr>, #> #   variantAllele <chr>, refseqMrnaId <chr>, proteinPosStart <int>, … .get_data_by_sample(sample_study_pairs = df_pairs2, genes = 7157) #> Joining with `by = join_by(study_id)` #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_plasmacytoid_mskcc_2016_mutations and #> prad_msk_2019_mutations #> Genes: 7157 #> # A tibble: 2 × 28 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 TP53                   7157 UC0wMDAyMTQ2LVQwMS1JTTM6YmxjYV9w… UC0wMDAyMTQ2OmJ… #> 2 TP53                   7157 UC0wMDAyMTQ2LVQwMS1JTTM6YmxjYV9w… UC0wMDAyMTQ2OmJ… #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, #> #   chr <chr>, variantAllele <chr>, refseqMrnaId <chr>, … .get_data_by_sample(sample_study_pairs = df_pairs2, data_type = \"cna\") #> Joining with `by = join_by(study_id)` #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_plasmacytoid_mskcc_2016_cna and prad_msk_2019_cna #> Genes: \"All available genes\" #> NULL .get_data_by_sample(sample_study_pairs = df_pairs2, data_type = \"fusion\") #> Joining with `by = join_by(study_id)` #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_plasmacytoid_mskcc_2016_structural_variants and #> prad_msk_2019_structural_variants #> Genes: \"All available genes\" #> # A tibble: 2 × 44 #>   uniqueSampleKey uniquePatientKey molecularProfileId sampleId patientId studyId #>   <chr>           <chr>            <chr>              <chr>    <chr>     <chr>   #> 1 UC0wMDAyMTQ2LV… UC0wMDAyMTQ2OmJ… blca_plasmacytoid… P-00021… P-0002146 blca_p… #> 2 c19DX0NBVVdUN1… cF9DX0NBVVdUNzp… prad_msk_2019_str… s_C_CAU… p_C_CAUW… prad_m… #> # ℹ 38 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1EnsemblTranscriptId <chr>, site1Chromosome <chr>, site1Position <int>, #> #   site1Contig <chr>, site1Region <chr>, site1RegionNumber <int>, #> #   site1Description <chr>, site2EntrezGeneId <int>, site2HugoSymbol <chr>, #> #   site2EnsemblTranscriptId <chr>, site2Chromosome <chr>, site2Position <int>, #> #   site2Contig <chr>, site2Region <chr>, site2RegionNumber <int>, #> #   site2Description <chr>, site2EffectOnFrame <chr>, ncbiBuild <chr>, … # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_data_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","title":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","text":"Endpoints retrieving mutation cna data structurally similar. internal function allows pull data either endpoint. logic sensible default guesses study_id molecular_profile_id NULL","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_data_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","text":"","code":".get_data_by_study(   study_id = NULL,   molecular_profile_id = NULL,   data_type = c(\"mutation\", \"cna\", \"fusion\", \"structural_variant\", \"segment\"),   base_url = NULL,   add_hugo = TRUE )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_data_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","text":"study_id study ID query mutations. NULL, guesses study ID based molecular_profile_id. molecular_profile_id molecular profile query mutations. NULL, guesses molecular_profile_id based study ID. data_type specify type data return. Options aremutation, cna, fusion, orstructural_variant (fusion), segment (copy number segmentation data).. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>) add_hugo Logical indicating whether HugoGeneSymbol added resulting data frame, already present raw API results. Argument TRUE default. FALSE, results returned (.e. existing Hugo Symbol columns raw results removed).","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_data_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","text":"dataframe mutations, CNAs structural variants","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/dot-get_data_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  .get_data_by_study(study_id = \"prad_msk_2019\", data_type = \"cna\") #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9QMDAxX2Q6cHJhZF9t… cF9DXzM2OTI0TDp… #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int> .get_data_by_study(study_id = \"prad_msk_2019\", data_type = \"mutation\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 26 × 28 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey #>    <chr>                 <int> <chr>                            <chr>            #>  1 ZFHX3                   463 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  2 ZFHX3                   463 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  3 ATR                     545 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  4 BCL2                    596 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  5 ETV1                   2115 c19DX1A4SzNUUl9QMDAxX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  6 ETV1                   2115 c19DX1A4SzNUUl9QMDAzX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  7 FAT1                   2195 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  8 MSH6                   2956 c19DX1A4SzNUUl9QMDAyX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  9 MSH6                   2956 c19DX1A4SzNUUl9QMDAzX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #> 10 FOXA1                  3169 c19DX0UwS0pGSl9QMDAyX2Q6cHJhZF9… cF9DX0UwS0pGSjp… #> # ℹ 16 more rows #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … .get_data_by_study(study_id = \"prad_msk_2019\", data_type = \"fusion\") #> ℹ Returning all data for the \"prad_msk_2019_structural_variants\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 4 × 44 #>   uniqueSampleKey uniquePatientKey molecularProfileId sampleId patientId studyId #>   <chr>           <chr>            <chr>              <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN1… cF9DX0NBVVdUNzp… prad_msk_2019_str… s_C_CAU… p_C_CAUW… prad_m… #> 2 c19DX0RVNkVDQ1… cF9DX0RVNkVDQzp… prad_msk_2019_str… s_C_DU6… p_C_DU6E… prad_m… #> 3 c19DX1ZDNlA5QV… cF9DX1ZDNlA5QTp… prad_msk_2019_str… s_C_VC6… p_C_VC6P… prad_m… #> 4 c19DX1ZDNlA5QV… cF9DX1ZDNlA5QTp… prad_msk_2019_str… s_C_VC6… p_C_VC6P… prad_m… #> # ℹ 38 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1EnsemblTranscriptId <chr>, site1Chromosome <chr>, site1Position <int>, #> #   site1Contig <chr>, site1Region <chr>, site1RegionNumber <int>, #> #   site1Description <chr>, site2EntrezGeneId <int>, site2HugoSymbol <chr>, #> #   site2EnsemblTranscriptId <chr>, site2Chromosome <chr>, site2Position <int>, #> #   site2Contig <chr>, site2Region <chr>, site2RegionNumber <int>, #> #   site2Description <chr>, site2EffectOnFrame <chr>, ncbiBuild <chr>, …  .get_data_by_study(molecular_profile_id = \"prad_msk_2019_cna\", data_type = \"cna\") #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9QMDAxX2Q6cHJhZF9t… cF9DXzM2OTI0TDp… #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int> .get_data_by_study(molecular_profile_id = \"prad_msk_2019_mutations\", data_type = \"mutation\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 26 × 28 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey #>    <chr>                 <int> <chr>                            <chr>            #>  1 ZFHX3                   463 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  2 ZFHX3                   463 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  3 ATR                     545 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  4 BCL2                    596 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  5 ETV1                   2115 c19DX1A4SzNUUl9QMDAxX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  6 ETV1                   2115 c19DX1A4SzNUUl9QMDAzX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  7 FAT1                   2195 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  8 MSH6                   2956 c19DX1A4SzNUUl9QMDAyX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  9 MSH6                   2956 c19DX1A4SzNUUl9QMDAzX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #> 10 FOXA1                  3169 c19DX0UwS0pGSl9QMDAyX2Q6cHJhZF9… cF9DX0UwS0pGSjp… #> # ℹ 16 more rows #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … .get_data_by_study(molecular_profile_id = \"prad_msk_2019_structural_variants\", data_type = \"fusion\") #> ℹ Returning all data for the \"prad_msk_2019_structural_variants\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 4 × 44 #>   uniqueSampleKey uniquePatientKey molecularProfileId sampleId patientId studyId #>   <chr>           <chr>            <chr>              <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN1… cF9DX0NBVVdUNzp… prad_msk_2019_str… s_C_CAU… p_C_CAUW… prad_m… #> 2 c19DX0RVNkVDQ1… cF9DX0RVNkVDQzp… prad_msk_2019_str… s_C_DU6… p_C_DU6E… prad_m… #> 3 c19DX1ZDNlA5QV… cF9DX1ZDNlA5QTp… prad_msk_2019_str… s_C_VC6… p_C_VC6P… prad_m… #> 4 c19DX1ZDNlA5QV… cF9DX1ZDNlA5QTp… prad_msk_2019_str… s_C_VC6… p_C_VC6P… prad_m… #> # ℹ 38 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1EnsemblTranscriptId <chr>, site1Chromosome <chr>, site1Position <int>, #> #   site1Contig <chr>, site1Region <chr>, site1RegionNumber <int>, #> #   site1Description <chr>, site2EntrezGeneId <int>, site2HugoSymbol <chr>, #> #   site2EnsemblTranscriptId <chr>, site2Chromosome <chr>, site2Position <int>, #> #   site2Contig <chr>, site2Region <chr>, site2RegionNumber <int>, #> #   site2Description <chr>, site2EffectOnFrame <chr>, ncbiBuild <chr>, … # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_alias.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","title":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","text":"function grabs known gene aliases given Hugo Symbol. may notice genes -alias pairs always consistent. example get_alias(\"KMT2D\") return \"MLL2\" get_alias(\"MLL2\") return \"KMT2D\" function relies existing cBioPortal API controls database aliases. Therefore, convenience function may want consider carefully curated alias list like cbioportalR::impact_gene_info","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_alias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","text":"","code":"get_alias(hugo_symbol = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_alias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","text":"hugo_symbol hugo symbol return aliases base_url database URL query","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_alias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","text":"character string aliases","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_alias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","text":"","code":"# \\dontrun{  get_alias(hugo_symbol = \"FGFR3\", base_url = 'www.cbioportal.org/api') #> # A tibble: 4 × 2 #>   hugo_symbol alias #>   <chr>       <chr> #> 1 FGFR3       ACH   #> 2 FGFR3       CD333 #> 3 FGFR3       CEK2  #> 4 FGFR3       JTK4  get_alias(hugo_symbol = c(\"FGFR3\", \"TP53\"), base_url = 'www.cbioportal.org/api') #> # A tibble: 6 × 2 #>   hugo_symbol alias #>   <chr>       <chr> #> 1 FGFR3       ACH   #> 2 FGFR3       CD333 #> 3 FGFR3       CEK2  #> 4 FGFR3       JTK4  #> 5 TP53        LFS1  #> 6 TP53        p53   # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cbioportal_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cBioPortal Access Token — get_cbioportal_token","title":"Get cBioPortal Access Token — get_cbioportal_token","text":"Convenience function retrieves cBioPortal token System Environment variable \"CBIOPORTAL_TOKEN\"","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cbioportal_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cBioPortal Access Token — get_cbioportal_token","text":"","code":"get_cbioportal_token()"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cbioportal_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cBioPortal Access Token — get_cbioportal_token","text":"Returns string cBioPortal token successfully authenticated, warning token found.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cbioportal_token.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get cBioPortal Access Token — get_cbioportal_token","text":"Karissa Whiting, Daniel D. Sjoberg","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cbioportal_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get cBioPortal Access Token — get_cbioportal_token","text":"","code":"# \\dontrun{ get_cbioportal_token() #> Warning: No CBIOPORTAL_TOKEN in `.Renviron`. Try `usethis::edit_r_environ()` to add a token #> [1] \"\" # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_patient.html","id":null,"dir":"Reference","previous_headings":"","what":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","title":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","text":"Get clinical data attribute, study ID patient ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_patient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","text":"","code":"get_clinical_by_patient(   study_id = NULL,   patient_id = NULL,   patient_study_pairs = NULL,   clinical_attribute = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_patient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs patient_id cBioPortal patient_id patient_study_pairs dataframe columns: patient_id, study_id. Variations capitalization column names accepted. can used place patient_id, study_id, arguments need pull samples several different studies . passed, take overwrite patient_id study_id also passed. clinical_attribute one clinical attributes study. none provided, return attributes available studies base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_patient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","text":"dataframe specific clinical attribute","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_patient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","text":"","code":"# \\dontrun{  ex <- tibble::tribble( ~patientID, ~study_id, \"P-0001453\", \"blca_nmibc_2017\", \"P-0002166\", \"blca_nmibc_2017\", \"P-0003238\", \"blca_nmibc_2017\", \"P-0000004\", \"msk_impact_2017\", \"P-0000023\", \"msk_impact_2017\")  x <- get_clinical_by_patient(patient_study_pairs = ex,  clinical_attribute = NULL, base_url = 'www.cbioportal.org/api') #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"blca_nmibc_2017\" study #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"msk_impact_2017\" study  # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","title":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","text":"Get clinical data attribute, study ID sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","text":"","code":"get_clinical_by_sample(   study_id = NULL,   sample_id = NULL,   sample_study_pairs = NULL,   clinical_attribute = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs sample_id vector sample IDs (character) sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. clinical_attribute one clinical attributes study. none provided, return attributes available studies base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","text":"dataframe specific clinical attribute","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","text":"","code":"# \\dontrun{ get_clinical_by_sample(study_id = \"acc_tcga\", sample_id = \"TCGA-OR-A5J2-01\",  clinical_attribute = \"CANCER_TYPE\", base_url = 'www.cbioportal.org/api') #> # A tibble: 1 × 7 #>   uniqueSampleKey                  uniquePatientKey   sampleId patientId studyId #>   <chr>                            <chr>              <chr>    <chr>     <chr>   #> 1 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUoyO… TCGA-OR… TCGA-OR-… acc_tc… #> # ℹ 2 more variables: clinicalAttributeId <chr>, value <chr>  ex <- tibble::tribble( ~sample_id, ~study_id, \"P-0001453-T01-IM3\", \"blca_nmibc_2017\", \"P-0002166-T01-IM3\", \"blca_nmibc_2017\", \"P-0003238-T01-IM5\", \"blca_nmibc_2017\", \"P-0000004-T01-IM3\", \"msk_impact_2017\", \"P-0000023-T01-IM3\", \"msk_impact_2017\")  x <- get_clinical_by_sample(sample_study_pairs = ex,  clinical_attribute = NULL, base_url = 'www.cbioportal.org/api') #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"blca_nmibc_2017\" study #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"msk_impact_2017\" study  # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all available clinical data for a specified study — get_clinical_by_study","title":"Get all available clinical data for a specified study — get_clinical_by_study","text":"Returns sample-level patient-level clinical data given study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all available clinical data for a specified study — get_clinical_by_study","text":"","code":"get_clinical_by_study(   study_id = NULL,   clinical_attribute = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all available clinical data for a specified study — get_clinical_by_study","text":"study_id study ID clinical_attribute one clinical attributes study. none provided, return attributes available study (available_clinical_attributes(<study_id>)) base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all available clinical data for a specified study — get_clinical_by_study","text":"dataframe available clinical attributes values","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_clinical_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all available clinical data for a specified study — get_clinical_by_study","text":"","code":"# \\dontrun{ get_clinical_by_study(study_id = \"acc_tcga\",  clinical_attribute = \"CANCER_TYPE\", base_url = 'www.cbioportal.org/api') #> # A tibble: 92 × 8 #>    uniqueSampleKey                  uniquePatientKey  sampleId patientId studyId #>    <chr>                            <chr>             <chr>    <chr>     <chr>   #>  1 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox… TCGA-OR… TCGA-OR-… acc_tc… #>  2 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUoy… TCGA-OR… TCGA-OR-… acc_tc… #>  3 VENHQS1PUi1BNUozLTAxOmFjY190Y2dh VENHQS1PUi1BNUoz… TCGA-OR… TCGA-OR-… acc_tc… #>  4 VENHQS1PUi1BNUo0LTAxOmFjY190Y2dh VENHQS1PUi1BNUo0… TCGA-OR… TCGA-OR-… acc_tc… #>  5 VENHQS1PUi1BNUo1LTAxOmFjY190Y2dh VENHQS1PUi1BNUo1… TCGA-OR… TCGA-OR-… acc_tc… #>  6 VENHQS1PUi1BNUo2LTAxOmFjY190Y2dh VENHQS1PUi1BNUo2… TCGA-OR… TCGA-OR-… acc_tc… #>  7 VENHQS1PUi1BNUo3LTAxOmFjY190Y2dh VENHQS1PUi1BNUo3… TCGA-OR… TCGA-OR-… acc_tc… #>  8 VENHQS1PUi1BNUo4LTAxOmFjY190Y2dh VENHQS1PUi1BNUo4… TCGA-OR… TCGA-OR-… acc_tc… #>  9 VENHQS1PUi1BNUo5LTAxOmFjY190Y2dh VENHQS1PUi1BNUo5… TCGA-OR… TCGA-OR-… acc_tc… #> 10 VENHQS1PUi1BNUpBLTAxOmFjY190Y2dh VENHQS1PUi1BNUpB… TCGA-OR… TCGA-OR-… acc_tc… #> # ℹ 82 more rows #> # ℹ 3 more variables: clinicalAttributeId <chr>, value <chr>, dataLevel <chr>  get_clinical_by_study(study_id = \"acc_tcga\", base_url = 'www.cbioportal.org/api') #> ! Sample Level Clinical Data: No `clinical_attribute` passed. Defaulting to returning all clinical attributes in \"acc_tcga\" study #> ! Patient Level Clinical Data: No `clinical_attribute` passed. Defaulting to returning all clinical attributes in \"acc_tcga\" study #> # A tibble: 6,292 × 7 #>    uniquePatientKey        patientId studyId clinicalAttributeId value dataLevel #>    <chr>                   <chr>     <chr>   <chr>               <chr> <chr>     #>  1 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… AGE                 58    PATIENT   #>  2 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… AJCC_PATHOLOGIC_TU… Stag… PATIENT   #>  3 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… ATYPICAL_MITOTIC_F… Atyp… PATIENT   #>  4 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… CAPSULAR_INVASION   Inva… PATIENT   #>  5 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… CLIN_M_STAGE        M0    PATIENT   #>  6 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… CT_SCAN_PREOP_RESU… [Unk… PATIENT   #>  7 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… CYTOPLASM_PRESENCE… Cyto… PATIENT   #>  8 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… DAYS_TO_INITIAL_PA… 0     PATIENT   #>  9 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… DFS_MONTHS          24.77 PATIENT   #> 10 VENHQS1PUi1BNUoxOmFjY1… TCGA-OR-… acc_tc… DFS_STATUS          1:Re… PATIENT   #> # ℹ 6,282 more rows #> # ℹ 1 more variable: sampleId <chr> # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cna_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CNA By Sample ID — get_cna_by_sample","title":"Get CNA By Sample ID — get_cna_by_sample","text":"Get CNA Sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cna_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CNA By Sample ID — get_cna_by_sample","text":"","code":"get_cna_by_sample(   sample_id = NULL,   study_id = NULL,   molecular_profile_id = NULL,   sample_study_pairs = NULL,   genes = NULL,   panel = NULL,   add_hugo = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cna_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CNA By Sample ID — get_cna_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs molecular_profile_id string indicating molecular profile ID pull data. ID supplied, guess molecular profile ID based study ID. 1 molecular profile ID can passed. mutations 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. genes vector Entrez ids Hugo symbols. Hugo symbols supplied, converted entrez ids using get_entrez_id() function. panel genes supplied, genes arguments returned. NULL (default), return gene results available genomic data sample. panel One panel IDs query (e.g. 'IMPACT468'). panel genes supplied, genes arguments returned. NULL (default), return gene results available genomic data sample. add_hugo Logical indicating whether HugoGeneSymbol added resulting data frame, already present raw API results. Argument TRUE default. FALSE, results returned (.e. existing Hugo Symbol columns raw results removed). base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cna_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CNA By Sample ID — get_cna_by_sample","text":"data frame CNAs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cna_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CNA By Sample ID — get_cna_by_sample","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  get_cna_by_sample(sample_id = c(\"s_C_36924L_P001_d\"),                  study_id = \"prad_msk_2019\") #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: \"prad_msk_2019_cna\" #> Genes: \"All available genes\" #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9QMDAxX2Q6cHJhZF9t… cF9DXzM2OTI0TDp… #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int> # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cna_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CNA By Study — get_cna_by_study","title":"Get CNA By Study — get_cna_by_study","text":"Get CNA Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cna_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CNA By Study — get_cna_by_study","text":"","code":"get_cna_by_study(   study_id = NULL,   molecular_profile_id = NULL,   add_hugo = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cna_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CNA By Study — get_cna_by_study","text":"study_id study ID query mutations. NULL, guesses study ID based molecular_profile_id. molecular_profile_id molecular profile query mutations. NULL, guesses molecular_profile_id based study ID. add_hugo Logical indicating whether HugoGeneSymbol added resulting data frame, already present raw API results. Argument TRUE default. FALSE, results returned (.e. existing Hugo Symbol columns raw results removed). base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cna_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CNA By Study — get_cna_by_study","text":"dataframe CNAs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_cna_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CNA By Study — get_cna_by_study","text":"","code":"# \\dontrun{ get_cna_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9QMDAxX2Q6cHJhZF9t… cF9DXzM2OTI0TDp… #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int> get_cna_by_study(molecular_profile_id = \"prad_msk_2019_cna\") #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9QMDAxX2Q6cHJhZF9t… cF9DXzM2OTI0TDp… #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int> # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_entrez_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","title":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","text":"Get Entrez Gene ID given set Hugo Symbols","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_entrez_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","text":"","code":"get_entrez_id(hugo_symbol = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_entrez_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","text":"hugo_symbol character vector Hugo Symbols base_url database URL query","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_entrez_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","text":"dataframe Entrez Gene IDs Hugo Symbols","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_entrez_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","text":"","code":"# \\dontrun{ get_entrez_id(hugo_symbol = \"TAP1\", base_url = 'www.cbioportal.org/api') #> # A tibble: 1 × 3 #>   entrezGeneId hugoGeneSymbol type           #>          <int> <chr>          <chr>          #> 1         6890 TAP1           protein-coding get_entrez_id(hugo_symbol = c(\"FGFR1\", \"TP53\") , base_url = 'www.cbioportal.org/api') #> # A tibble: 2 × 3 #>   entrezGeneId hugoGeneSymbol type           #>          <int> <chr>          <chr>          #> 1         7157 TP53           protein-coding #> 2         2260 FGFR1          protein-coding # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_fusions_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Fusions By Sample ID — get_fusions_by_sample","title":"Get Fusions By Sample ID — get_fusions_by_sample","text":"Get Fusions Sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_fusions_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Fusions By Sample ID — get_fusions_by_sample","text":"","code":"get_fusions_by_sample(   sample_id = NULL,   study_id = NULL,   molecular_profile_id = NULL,   sample_study_pairs = NULL,   genes = NULL,   panel = NULL,   base_url = NULL )  get_structural_variants_by_sample(   sample_id = NULL,   study_id = NULL,   molecular_profile_id = NULL,   sample_study_pairs = NULL,   genes = NULL,   panel = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_fusions_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Fusions By Sample ID — get_fusions_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs molecular_profile_id string indicating molecular profile ID pull data. ID supplied, guess molecular profile ID based study ID. 1 molecular profile ID can passed. mutations 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. genes vector Entrez ids Hugo symbols. Hugo symbols supplied, converted entrez ids using get_entrez_id() function. panel genes supplied, genes arguments returned. NULL (default), return gene results available genomic data sample. panel One panel IDs query (e.g. 'IMPACT468'). panel genes supplied, genes arguments returned. NULL (default), return gene results available genomic data sample. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_fusions_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Fusions By Sample ID — get_fusions_by_sample","text":"data frame Fusions","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_fusions_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Fusions By Sample ID — get_fusions_by_sample","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"   #' # These return the same results get_fusions_by_sample(sample_id = c(\"s_C_CAUWT7_P001_d\"),                  study_id = \"prad_msk_2019\") #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: \"prad_msk_2019_structural_variants\" #> Genes: \"All available genes\" #> # A tibble: 1 × 44 #>   uniqueSampleKey uniquePatientKey molecularProfileId sampleId patientId studyId #>   <chr>           <chr>            <chr>              <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN1… cF9DX0NBVVdUNzp… prad_msk_2019_str… s_C_CAU… p_C_CAUW… prad_m… #> # ℹ 38 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1EnsemblTranscriptId <chr>, site1Chromosome <chr>, site1Position <int>, #> #   site1Contig <chr>, site1Region <chr>, site1RegionNumber <int>, #> #   site1Description <chr>, site2EntrezGeneId <int>, site2HugoSymbol <chr>, #> #   site2EnsemblTranscriptId <chr>, site2Chromosome <chr>, site2Position <int>, #> #   site2Contig <chr>, site2Region <chr>, site2RegionNumber <int>, #> #   site2Description <chr>, site2EffectOnFrame <chr>, ncbiBuild <chr>, … get_structural_variants_by_sample(sample_id = c(\"s_C_CAUWT7_P001_d\"),                  study_id = \"prad_msk_2019\") #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: \"prad_msk_2019_structural_variants\" #> Genes: \"All available genes\" #> # A tibble: 1 × 44 #>   uniqueSampleKey uniquePatientKey molecularProfileId sampleId patientId studyId #>   <chr>           <chr>            <chr>              <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN1… cF9DX0NBVVdUNzp… prad_msk_2019_str… s_C_CAU… p_C_CAUW… prad_m… #> # ℹ 38 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1EnsemblTranscriptId <chr>, site1Chromosome <chr>, site1Position <int>, #> #   site1Contig <chr>, site1Region <chr>, site1RegionNumber <int>, #> #   site1Description <chr>, site2EntrezGeneId <int>, site2HugoSymbol <chr>, #> #   site2EnsemblTranscriptId <chr>, site2Chromosome <chr>, site2Position <int>, #> #   site2Contig <chr>, site2Region <chr>, site2RegionNumber <int>, #> #   site2Description <chr>, site2EffectOnFrame <chr>, ncbiBuild <chr>, …                  # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_fusions_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Fusions By Study — get_fusions_by_study","title":"Get Fusions By Study — get_fusions_by_study","text":"Get Fusions Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_fusions_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Fusions By Study — get_fusions_by_study","text":"","code":"get_fusions_by_study(   study_id = NULL,   molecular_profile_id = NULL,   base_url = NULL )  get_structural_variants_by_study(   study_id = NULL,   molecular_profile_id = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_fusions_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Fusions By Study — get_fusions_by_study","text":"study_id study ID query mutations. NULL, guesses study ID based molecular_profile_id. molecular_profile_id molecular profile query mutations. NULL, guesses molecular_profile_id based study ID. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_fusions_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Fusions By Study — get_fusions_by_study","text":"dataframe fusions","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_fusions_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Fusions By Study — get_fusions_by_study","text":"","code":"# \\dontrun{ # These return the same results get_fusions_by_study(molecular_profile_id = \"prad_msk_2019_structural_variants\") #> ℹ Returning all data for the \"prad_msk_2019_structural_variants\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 4 × 44 #>   uniqueSampleKey uniquePatientKey molecularProfileId sampleId patientId studyId #>   <chr>           <chr>            <chr>              <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN1… cF9DX0NBVVdUNzp… prad_msk_2019_str… s_C_CAU… p_C_CAUW… prad_m… #> 2 c19DX0RVNkVDQ1… cF9DX0RVNkVDQzp… prad_msk_2019_str… s_C_DU6… p_C_DU6E… prad_m… #> 3 c19DX1ZDNlA5QV… cF9DX1ZDNlA5QTp… prad_msk_2019_str… s_C_VC6… p_C_VC6P… prad_m… #> 4 c19DX1ZDNlA5QV… cF9DX1ZDNlA5QTp… prad_msk_2019_str… s_C_VC6… p_C_VC6P… prad_m… #> # ℹ 38 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1EnsemblTranscriptId <chr>, site1Chromosome <chr>, site1Position <int>, #> #   site1Contig <chr>, site1Region <chr>, site1RegionNumber <int>, #> #   site1Description <chr>, site2EntrezGeneId <int>, site2HugoSymbol <chr>, #> #   site2EnsemblTranscriptId <chr>, site2Chromosome <chr>, site2Position <int>, #> #   site2Contig <chr>, site2Region <chr>, site2RegionNumber <int>, #> #   site2Description <chr>, site2EffectOnFrame <chr>, ncbiBuild <chr>, …  get_structural_variants_by_study(molecular_profile_id =        \"prad_msk_2019_structural_variants\") #> ℹ Returning all data for the \"prad_msk_2019_structural_variants\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 4 × 44 #>   uniqueSampleKey uniquePatientKey molecularProfileId sampleId patientId studyId #>   <chr>           <chr>            <chr>              <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN1… cF9DX0NBVVdUNzp… prad_msk_2019_str… s_C_CAU… p_C_CAUW… prad_m… #> 2 c19DX0RVNkVDQ1… cF9DX0RVNkVDQzp… prad_msk_2019_str… s_C_DU6… p_C_DU6E… prad_m… #> 3 c19DX1ZDNlA5QV… cF9DX1ZDNlA5QTp… prad_msk_2019_str… s_C_VC6… p_C_VC6P… prad_m… #> 4 c19DX1ZDNlA5QV… cF9DX1ZDNlA5QTp… prad_msk_2019_str… s_C_VC6… p_C_VC6P… prad_m… #> # ℹ 38 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1EnsemblTranscriptId <chr>, site1Chromosome <chr>, site1Position <int>, #> #   site1Contig <chr>, site1Region <chr>, site1RegionNumber <int>, #> #   site1Description <chr>, site2EntrezGeneId <int>, site2HugoSymbol <chr>, #> #   site2EnsemblTranscriptId <chr>, site2Chromosome <chr>, site2Position <int>, #> #   site2Contig <chr>, site2Region <chr>, site2RegionNumber <int>, #> #   site2Description <chr>, site2EffectOnFrame <chr>, ncbiBuild <chr>, …        # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_gene_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","title":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","text":"Retrieve Genes Included Specified Panel ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_gene_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","text":"","code":"get_gene_panel(panel_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_gene_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","text":"panel_id name panel. See available_gene_panels() get panel ID base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_gene_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","text":"dataframe genes specified panel","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_gene_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","text":"","code":"# \\dontrun{ get_gene_panel(panel_id = \"IMPACT468\", base_url = 'www.cbioportal.org/api') #> # A tibble: 469 × 4 #>    genePanelId entrezGeneId hugoGeneSymbol description                           #>    <chr>              <int> <chr>          <chr>                                 #>  1 IMPACT468             25 ABL1           Targeted (468 cancer genes) sequenci… #>  2 IMPACT468          84142 ABRAXAS1       Targeted (468 cancer genes) sequenci… #>  3 IMPACT468             90 ACVR1          Targeted (468 cancer genes) sequenci… #>  4 IMPACT468          27161 AGO2           Targeted (468 cancer genes) sequenci… #>  5 IMPACT468            207 AKT1           Targeted (468 cancer genes) sequenci… #>  6 IMPACT468            208 AKT2           Targeted (468 cancer genes) sequenci… #>  7 IMPACT468          10000 AKT3           Targeted (468 cancer genes) sequenci… #>  8 IMPACT468            238 ALK            Targeted (468 cancer genes) sequenci… #>  9 IMPACT468            242 ALOX12B        Targeted (468 cancer genes) sequenci… #> 10 IMPACT468         139285 AMER1          Targeted (468 cancer genes) sequenci… #> # ℹ 459 more rows # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get A List of Genes for a Specified Database — get_genes","title":"Get A List of Genes for a Specified Database — get_genes","text":"Get List Genes Specified Database","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get A List of Genes for a Specified Database — get_genes","text":"","code":"get_genes(base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get A List of Genes for a Specified Database — get_genes","text":"base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get A List of Genes for a Specified Database — get_genes","text":"dataframe gene ids, hugo symbols, gene types","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get A List of Genes for a Specified Database — get_genes","text":"","code":"# \\dontrun{ get_genes(base_url = 'www.cbioportal.org/api') #> # A tibble: 46,167 × 3 #>    entrezGeneId hugoGeneSymbol type           #>           <int> <chr>          <chr>          #>  1    101340252 SNORD121B      snoRNA         #>  2         3360 HTR4           protein-coding #>  3    100113379 SNORD121A      snoRNA         #>  4        -3510 MIR-124A-1/5P  miRNA          #>  5         3362 HTR6           protein-coding #>  6         3363 HTR7           protein-coding #>  7    106481909 RNU6-654P      pseudogene     #>  8        56987 BBX            protein-coding #>  9    106479427 RN7SL563P      pseudogene     #> 10    107985793 ARL14EPP1      pseudogene     #> # ℹ 46,157 more rows # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genetics_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","title":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","text":"Get Genomic Information Sample IDs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genetics_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","text":"","code":"get_genetics_by_sample(   sample_id = NULL,   study_id = NULL,   sample_study_pairs = NULL,   genes = NULL,   panel = NULL,   add_hugo = TRUE,   base_url = NULL,   return_segments = FALSE )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genetics_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. genes vector Entrez ids Hugo symbols. Hugo symbols supplied, converted entrez ids using get_entrez_id() function. panel genes supplied, genes arguments returned. NULL (default), return gene results available genomic data sample. panel One panel IDs query (e.g. 'IMPACT468'). panel genes supplied, genes arguments returned. NULL (default), return gene results available genomic data sample. add_hugo Logical indicating whether HugoGeneSymbol added resulting data frame, already present raw API results. Argument TRUE default. FALSE, results returned (.e. existing Hugo Symbol columns raw results removed). base_url database URL query NULL default URL set set_cbioportal_db(<your_db>) return_segments Default FALSE copy number segmentation data returned addition mutation, cna structural variant data. TRUE return available segmentation data results.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genetics_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","text":"list mutations, cna structural variants (including fusions), available. also return copy number segmentation data return_segments = TRUE.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genetics_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","text":"","code":"# \\dontrun{ get_genetics_by_sample(sample_id = c(\"TCGA-OR-A5J2-01\",\"TCGA-OR-A5J6-01\"),  study_id = \"acc_tcga\",  return_segments = TRUE) #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"acc_tcga_mutations\" #> Genes: \"All available genes\" #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"acc_tcga_gistic\" #> Genes: \"All available genes\" #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"Not Applicable\" #> Genes: \"All available genes\" #> ! No \"structural_variant\" data returned. Error:  No molecular profile for `data_type = fusion` found in \"acc_tcga\".  See `available_profiles('acc_tcga')` #> $mutation #> # A tibble: 173 × 28 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey #>    <chr>                 <int> <chr>                            <chr>            #>  1 ZFPM1                161882 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  2 ZNF787               126208 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  3 PODXL                  5420 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  4 CCDC102A              92922 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  5 TVP23C               201158 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  6 ZNF628                89887 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  7 TBP                    6908 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  8 SEMA5B                54437 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  9 CELSR2                 1952 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #> 10 MUC5B                727897 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #> # ℹ 163 more rows #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … #>  #> $cna #> # A tibble: 417 × 9 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey #>    <chr>                 <int> <chr>                            <chr>            #>  1 AJAP1                 55966 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  2 NPHP4                261734 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  3 KCNAB2                 8514 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  4 CHD5                  26038 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  5 RPL22                  6146 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  6 RNF207               388591 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  7 ICMT                  23463 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  8 ICMT-DT              148645 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  9 GPR153               387509 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #> 10 HES3                 390992 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #> # ℹ 407 more rows #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int> #>  #> $segment #> # A tibble: 210 × 10 #>    uniqueSampleKey  uniquePatientKey patientId  start    end segmentMean studyId #>    <chr>            <chr>            <chr>      <int>  <int>       <dbl> <chr>   #>  1 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR-… 3.22e6 4.75e6      -0.224 acc_tc… #>  2 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR-… 4.75e6 1.13e7      -0.839 acc_tc… #>  3 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR-… 1.14e7 1.28e7       0.174 acc_tc… #>  4 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR-… 1.28e7 3.59e7      -0.226 acc_tc… #>  5 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR-… 3.59e7 3.60e7       0.478 acc_tc… #>  6 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR-… 3.60e7 4.23e7      -0.226 acc_tc… #>  7 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR-… 4.23e7 4.24e7       0.491 acc_tc… #>  8 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR-… 4.24e7 4.47e7      -0.243 acc_tc… #>  9 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR-… 4.48e7 4.48e7       0.441 acc_tc… #> 10 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR-… 4.48e7 5.33e7      -0.238 acc_tc… #> # ℹ 200 more rows #> # ℹ 3 more variables: sampleId <chr>, chromosome <chr>, numberOfProbes <int> #>  # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genetics_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Genomic Information By Study — get_genetics_by_study","title":"Get All Genomic Information By Study — get_genetics_by_study","text":"Get Genomic Information Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genetics_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Genomic Information By Study — get_genetics_by_study","text":"","code":"get_genetics_by_study(   study_id = NULL,   add_hugo = TRUE,   base_url = NULL,   return_segments = FALSE )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genetics_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Genomic Information By Study — get_genetics_by_study","text":"study_id study ID query mutations. NULL, guesses study ID based molecular_profile_id. add_hugo Logical indicating whether HugoGeneSymbol added resulting data frame, already present raw API results. Argument TRUE default. FALSE, results returned (.e. existing Hugo Symbol columns raw results removed). base_url database URL query NULL default URL set set_cbioportal_db(<your_db>) return_segments Default FALSE copy number segmentation data returned addition mutation, cna structural variant data. TRUE return available segmentation data results.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genetics_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Genomic Information By Study — get_genetics_by_study","text":"list mutations, cna structural variants (including fusions), available. also return copy number segmentation data return_segments = TRUE.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_genetics_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Genomic Information By Study — get_genetics_by_study","text":"","code":"# \\dontrun{ get_genetics_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> ℹ Returning all data for the \"prad_msk_2019_structural_variants\" molecular profile in the \"prad_msk_2019\" study #> $mutation #> # A tibble: 26 × 28 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey #>    <chr>                 <int> <chr>                            <chr>            #>  1 ZFHX3                   463 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  2 ZFHX3                   463 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  3 ATR                     545 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  4 BCL2                    596 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  5 ETV1                   2115 c19DX1A4SzNUUl9QMDAxX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  6 ETV1                   2115 c19DX1A4SzNUUl9QMDAzX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  7 FAT1                   2195 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  8 MSH6                   2956 c19DX1A4SzNUUl9QMDAyX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  9 MSH6                   2956 c19DX1A4SzNUUl9QMDAzX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #> 10 FOXA1                  3169 c19DX0UwS0pGSl9QMDAyX2Q6cHJhZF9… cF9DX0UwS0pGSjp… #> # ℹ 16 more rows #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … #>  #> $cna #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9QMDAxX2Q6cHJhZF9t… cF9DXzM2OTI0TDp… #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int> #>  #> $structural_variant #> # A tibble: 4 × 44 #>   uniqueSampleKey uniquePatientKey molecularProfileId sampleId patientId studyId #>   <chr>           <chr>            <chr>              <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN1… cF9DX0NBVVdUNzp… prad_msk_2019_str… s_C_CAU… p_C_CAUW… prad_m… #> 2 c19DX0RVNkVDQ1… cF9DX0RVNkVDQzp… prad_msk_2019_str… s_C_DU6… p_C_DU6E… prad_m… #> 3 c19DX1ZDNlA5QV… cF9DX1ZDNlA5QTp… prad_msk_2019_str… s_C_VC6… p_C_VC6P… prad_m… #> 4 c19DX1ZDNlA5QV… cF9DX1ZDNlA5QTp… prad_msk_2019_str… s_C_VC6… p_C_VC6P… prad_m… #> # ℹ 38 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1EnsemblTranscriptId <chr>, site1Chromosome <chr>, site1Position <int>, #> #   site1Contig <chr>, site1Region <chr>, site1RegionNumber <int>, #> #   site1Description <chr>, site2EntrezGeneId <int>, site2HugoSymbol <chr>, #> #   site2EnsemblTranscriptId <chr>, site2Chromosome <chr>, site2Position <int>, #> #   site2Contig <chr>, site2Region <chr>, site2RegionNumber <int>, #> #   site2Description <chr>, site2EffectOnFrame <chr>, ncbiBuild <chr>, … #>  # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_hugo_symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","title":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","text":"Get Hugo Symbol given set Entrez IDs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_hugo_symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","text":"","code":"get_hugo_symbol(entrez_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_hugo_symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","text":"entrez_id character numeric vector Entrez gene IDs base_url database URL query","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_hugo_symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","text":"dataframe Entrez Gene IDs Hugo Symbols","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_hugo_symbol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","text":"","code":"# \\dontrun{ get_hugo_symbol(entrez_id = 2261, base_url = 'www.cbioportal.org/api') #> # A tibble: 1 × 3 #>   entrezGeneId hugoGeneSymbol type           #>          <int> <chr>          <chr>          #> 1         2261 FGFR3          protein-coding get_hugo_symbol(entrez_id = c(2261, 7157) , base_url = 'www.cbioportal.org/api') #> # A tibble: 2 × 3 #>   entrezGeneId hugoGeneSymbol type           #>          <int> <chr>          <chr>          #> 1         7157 TP53           protein-coding #> 2         2261 FGFR3          protein-coding # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_mutations_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mutations By Sample ID — get_mutations_by_sample","title":"Get Mutations By Sample ID — get_mutations_by_sample","text":"Get Mutations Sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_mutations_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mutations By Sample ID — get_mutations_by_sample","text":"","code":"get_mutations_by_sample(   sample_id = NULL,   study_id = NULL,   molecular_profile_id = NULL,   sample_study_pairs = NULL,   genes = NULL,   panel = NULL,   add_hugo = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_mutations_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mutations By Sample ID — get_mutations_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs molecular_profile_id string indicating molecular profile ID pull data. ID supplied, guess molecular profile ID based study ID. 1 molecular profile ID can passed. mutations 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. genes vector Entrez ids Hugo symbols. Hugo symbols supplied, converted entrez ids using get_entrez_id() function. panel genes supplied, genes arguments returned. NULL (default), return gene results available genomic data sample. panel One panel IDs query (e.g. 'IMPACT468'). panel genes supplied, genes arguments returned. NULL (default), return gene results available genomic data sample. add_hugo Logical indicating whether HugoGeneSymbol added resulting data frame, already present raw API results. Argument TRUE default. FALSE, results returned (.e. existing Hugo Symbol columns raw results removed). base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_mutations_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mutations By Sample ID — get_mutations_by_sample","text":"data frame mutations (maf file format)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_mutations_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Mutations By Sample ID — get_mutations_by_sample","text":"","code":"# \\dontrun{ get_mutations_by_sample(sample_id = c(\"TCGA-OR-A5J2-01\",\"TCGA-OR-A5J6-01\"), study_id = \"acc_tcga\", base_url = \"public\") #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"acc_tcga_mutations\" #> Genes: \"All available genes\" #> # A tibble: 173 × 28 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey #>    <chr>                 <int> <chr>                            <chr>            #>  1 ZFPM1                161882 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  2 ZNF787               126208 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  3 PODXL                  5420 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  4 CCDC102A              92922 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  5 TVP23C               201158 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  6 ZNF628                89887 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  7 TBP                    6908 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  8 SEMA5B                54437 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #>  9 CELSR2                 1952 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #> 10 MUC5B                727897 VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh VENHQS1PUi1BNUo… #> # ℹ 163 more rows #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_mutations_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mutations By Study ID — get_mutations_by_study","title":"Get Mutations By Study ID — get_mutations_by_study","text":"Get Mutations Study ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_mutations_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mutations By Study ID — get_mutations_by_study","text":"","code":"get_mutations_by_study(   study_id = NULL,   molecular_profile_id = NULL,   add_hugo = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_mutations_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mutations By Study ID — get_mutations_by_study","text":"study_id study ID query mutations. NULL, guesses study ID based molecular_profile_id. molecular_profile_id molecular profile query mutations. NULL, guesses molecular_profile_id based study ID. add_hugo Logical indicating whether HugoGeneSymbol added resulting data frame, already present raw API results. Argument TRUE default. FALSE, results returned (.e. existing Hugo Symbol columns raw results removed). base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_mutations_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mutations By Study ID — get_mutations_by_study","text":"dataframe mutations (maf file format)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_mutations_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Mutations By Study ID — get_mutations_by_study","text":"","code":"# \\dontrun{ get_mutations_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 26 × 28 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey #>    <chr>                 <int> <chr>                            <chr>            #>  1 ZFHX3                   463 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  2 ZFHX3                   463 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  3 ATR                     545 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  4 BCL2                    596 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  5 ETV1                   2115 c19DX1A4SzNUUl9QMDAxX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  6 ETV1                   2115 c19DX1A4SzNUUl9QMDAzX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  7 FAT1                   2195 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  8 MSH6                   2956 c19DX1A4SzNUUl9QMDAyX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  9 MSH6                   2956 c19DX1A4SzNUUl9QMDAzX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #> 10 FOXA1                  3169 c19DX0UwS0pGSl9QMDAyX2Q6cHJhZF9… cF9DX0UwS0pGSjp… #> # ℹ 16 more rows #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … get_mutations_by_study(molecular_profile_id = \"prad_msk_2019_mutations\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 26 × 28 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey #>    <chr>                 <int> <chr>                            <chr>            #>  1 ZFHX3                   463 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  2 ZFHX3                   463 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  3 ATR                     545 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  4 BCL2                    596 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  5 ETV1                   2115 c19DX1A4SzNUUl9QMDAxX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  6 ETV1                   2115 c19DX1A4SzNUUl9QMDAzX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  7 FAT1                   2195 c19DX004WDQyVF9QMDAyX2Q6cHJhZF9… cF9DX004WDQyVDp… #>  8 MSH6                   2956 c19DX1A4SzNUUl9QMDAyX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #>  9 MSH6                   2956 c19DX1A4SzNUUl9QMDAzX2Q6cHJhZF9… cF9DX1A4SzNUUjp… #> 10 FOXA1                  3169 c19DX0UwS0pGSl9QMDAyX2Q6cHJhZF9… cF9DX0UwS0pGSjp… #> # ℹ 16 more rows #> # ℹ 24 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>, #> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>, #> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>, #> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>, #> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_panel_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","title":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","text":"Get Gene Panel study ID sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_panel_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","text":"","code":"get_panel_by_sample(   study_id = NULL,   sample_id = NULL,   sample_study_pairs = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_panel_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs sample_id vector sample IDs (character) sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_panel_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","text":"dataframe specific clinical attribute","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_panel_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","text":"","code":"# \\dontrun{ get_panel_by_sample(study_id = \"blca_plasmacytoid_mskcc_2016\",  sample_id = \"DS-sig-010-P2\",  base_url = 'www.cbioportal.org/api') #> # A tibble: 1 × 3 #>   sampleId      studyId                      genePanel #>   <chr>         <chr>                        <chr>     #> 1 DS-sig-010-P2 blca_plasmacytoid_mskcc_2016 IMPACT410  # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_samples_by_patient.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","title":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","text":"Get sample IDs given set patient IDs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_samples_by_patient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","text":"","code":"get_samples_by_patient(patient_id = NULL, study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_samples_by_patient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","text":"patient_id character string sample IDs query study_id character string indicating study ID searched. 1 study allowed. NULL, guess default study ID based database URL. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_samples_by_patient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","text":"dataframe patient IDs corresponding sample IDs. patient multiple samples, multiple rows per patient.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_samples_by_patient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","text":"","code":"# \\dontrun{ get_samples_by_patient(patient_id = c(\"P-0000034\", \"P-0000036\")) #> ℹ No `study_id` provided. Using \"msk_impact_2017\" as default study #>   patientId          sampleId          sampleType         studyId #> 1 P-0000034 P-0000034-T01-IM3 Primary Solid Tumor msk_impact_2017 #> 2 P-0000036 P-0000036-T01-IM3 Primary Solid Tumor msk_impact_2017 # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_segments_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Copy Number Segmentation Data By Sample ID — get_segments_by_sample","title":"Get Copy Number Segmentation Data By Sample ID — get_segments_by_sample","text":"Get Copy Number Segmentation Data Sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_segments_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Copy Number Segmentation Data By Sample ID — get_segments_by_sample","text":"","code":"get_segments_by_sample(   sample_id = NULL,   study_id = NULL,   sample_study_pairs = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_segments_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Copy Number Segmentation Data By Sample ID — get_segments_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_segments_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Copy Number Segmentation Data By Sample ID — get_segments_by_sample","text":"dataframe CNA segments","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_segments_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Copy Number Segmentation Data By Sample ID — get_segments_by_sample","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"   get_segments_by_sample(sample_id = c(\"s_C_CAUWT7_P001_d\"),                  study_id = \"prad_msk_2019\") #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: \"Not Applicable\" #> Genes: \"All available genes\" #> # A tibble: 47 × 10 #>    uniqueSampleKey  uniquePatientKey patientId  start    end segmentMean studyId #>    <chr>            <chr>            <chr>      <int>  <int>       <dbl> <chr>   #>  1 c19DX0NBVVdUN19… cF9DX0NBVVdUNzp… p_C_CAUW… 2.49e6 2.47e8      0.0479 prad_m… #>  2 c19DX0NBVVdUN19… cF9DX0NBVVdUNzp… p_C_CAUW… 4.72e6 2.43e8     -0.0846 prad_m… #>  3 c19DX0NBVVdUN19… cF9DX0NBVVdUNzp… p_C_CAUW… 1.45e6 3.65e7      0.054  prad_m… #>  4 c19DX0NBVVdUN19… cF9DX0NBVVdUNzp… p_C_CAUW… 3.70e7 3.85e7     -0.297  prad_m… #>  5 c19DX0NBVVdUN19… cF9DX0NBVVdUNzp… p_C_CAUW… 3.95e7 1.94e8      0.0539 prad_m… #>  6 c19DX0NBVVdUN19… cF9DX0NBVVdUNzp… p_C_CAUW… 1.40e6 1.90e8     -0.087  prad_m… #>  7 c19DX0NBVVdUN19… cF9DX0NBVVdUNzp… p_C_CAUW… 2.19e5 4.43e7      0.0672 prad_m… #>  8 c19DX0NBVVdUN19… cF9DX0NBVVdUNzp… p_C_CAUW… 5.27e7 7.51e7     -0.267  prad_m… #>  9 c19DX0NBVVdUN19… cF9DX0NBVVdUNzp… p_C_CAUW… 7.59e7 1.80e8      0.0921 prad_m… #> 10 c19DX0NBVVdUN19… cF9DX0NBVVdUNzp… p_C_CAUW… 3.93e5 3.13e7     -0.121  prad_m… #> # ℹ 37 more rows #> # ℹ 3 more variables: sampleId <chr>, chromosome <chr>, numberOfProbes <int>                  # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_segments_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Copy Number Segmentation Data By Study — get_segments_by_study","title":"Get Copy Number Segmentation Data By Study — get_segments_by_study","text":"Get Copy Number Segmentation Data Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_segments_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Copy Number Segmentation Data By Study — get_segments_by_study","text":"","code":"get_segments_by_study(study_id = NULL, add_hugo = TRUE, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_segments_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Copy Number Segmentation Data By Study — get_segments_by_study","text":"study_id study ID query mutations. NULL, guesses study ID based molecular_profile_id. add_hugo Logical indicating whether HugoGeneSymbol added resulting data frame, already present raw API results. Argument TRUE default. FALSE, results returned (.e. existing Hugo Symbol columns raw results removed). base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_segments_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Copy Number Segmentation Data By Study — get_segments_by_study","text":"dataframe CNA segments","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_segments_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Copy Number Segmentation Data By Study — get_segments_by_study","text":"","code":"# \\dontrun{ get_segments_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all \"copy number segmentation\" data for the \"prad_msk_2019\" study #> # A tibble: 714 × 10 #>    uniqueSampleKey  uniquePatientKey patientId  start    end segmentMean studyId #>    <chr>            <chr>            <chr>      <int>  <int>       <dbl> <chr>   #>  1 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… p_C_03LN… 2.49e6 2.47e8      0.0061 prad_m… #>  2 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… p_C_03LN… 4.72e6 1.35e8     -0.0516 prad_m… #>  3 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… p_C_03LN… 1.37e8 1.37e8      0.410  prad_m… #>  4 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… p_C_03LN… 1.42e8 2.43e8      0.054  prad_m… #>  5 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… p_C_03LN… 1.45e6 1.94e8     -0.0092 prad_m… #>  6 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… p_C_03LN… 1.40e6 1.90e8     -0.0331 prad_m… #>  7 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… p_C_03LN… 2.19e5 1.80e8      0.0139 prad_m… #>  8 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… p_C_03LN… 3.93e5 3.13e7     -0.013  prad_m… #>  9 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… p_C_03LN… 3.13e7 3.13e7      0.958  prad_m… #> 10 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… p_C_03LN… 3.13e7 1.71e8      0.0438 prad_m… #> # ℹ 704 more rows #> # ℹ 3 more variables: sampleId <chr>, chromosome <chr>, numberOfProbes <int> get_segments_by_study(molecular_profile_id = \"prad_msk_2019_cna\") #> Error in get_segments_by_study(molecular_profile_id = \"prad_msk_2019_cna\"): unused argument (molecular_profile_id = \"prad_msk_2019_cna\") # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_study_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","title":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","text":"Get Metadata Available Studies Database Specified Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_study_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","text":"","code":"get_study_info(study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_study_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","text":"study_id one study IDs (see available_studies() lookup IDs) base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_study_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","text":"dataframe study metadata","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/get_study_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  get_study_info(\"acc_tcga\") #>                                               name #> 1 Adrenocortical Carcinoma (TCGA, Firehose Legacy) #>                                                                                                                                                                                     description #> 1 TCGA Adrenocortical Carcinoma. Source data from <A HREF=\"http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/ACC/20160128/\">GDAC Firehose<\/A>. Previously known as TCGA Provisional. #>   publicStudy groups status          importDate allSampleCount #> 1        TRUE PUBLIC      0 2024-01-19 09:11:57             92 #>   sequencedSampleCount cnaSampleCount mrnaRnaSeqSampleCount #> 1                   90             90                     0 #>   mrnaRnaSeqV2SampleCount mrnaMicroarraySampleCount miRnaSampleCount #> 1                      79                         0                0 #>   methylationHm27SampleCount rppaSampleCount massSpectrometrySampleCount #> 1                          0              46                           0 #>   completeSampleCount readPermission treatmentCount structuralVariantCount #> 1                  75           TRUE              0                      0 #>    studyId cancerTypeId          cancerType.name cancerType.dedicatedColor #> 1 acc_tcga          acc Adrenocortical Carcinoma                    Purple #>   cancerType.shortName cancerType.parent cancerType.cancerTypeId #> 1                  ACC     adrenal_gland                     acc #>   referenceGenome #> 1            hg19 # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/impact_gene_info.html","id":null,"dir":"Reference","previous_headings":"","what":"IMPACT Gene Meta Data — impact_gene_info","title":"IMPACT Gene Meta Data — impact_gene_info","text":"Dataframe labeling genes included IMPACT panels along corresponding platform ID Entrez ID.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/impact_gene_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMPACT Gene Meta Data — impact_gene_info","text":"","code":"impact_gene_info"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/impact_gene_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMPACT Gene Meta Data — impact_gene_info","text":"data frame 470 genes hugo_symbol Factor w/ 574 levels, Column containing HUGO symbols genes included IMPACT entrez_id Integer, contains Entrez IDs genes included IMPACT platform_341 Character, indicates whether gene included IMPACT platform 341. Options included included platform_410 Character, indicates whether gene included IMPACT platform 410. Options included included platform_468 Character, indicates whether gene included IMPACT platform 468. Options included included alias nested dataframe aliases gene corresponding entrez gene ids aliases exist","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/impact_gene_info.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IMPACT Gene Meta Data — impact_gene_info","text":"http://www.cbioportal.org/","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/null-default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default value for NULL. — null-default","title":"Default value for NULL. — null-default","text":"Default value NULL.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/set_cbioportal_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to cBioPortal DB — set_cbioportal_db","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"function sets base cBioPortal URL","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/set_cbioportal_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"","code":"set_cbioportal_db(db = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/set_cbioportal_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"db database URL use base URL calls, \"public\" https://www.cbioportal.org/","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/set_cbioportal_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"return value, called side effects. display alert notifying user successfully authenticated cBioPortal.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/set_cbioportal_db.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"Karissa Whiting, Daniel D. Sjoberg","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/set_cbioportal_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"","code":"# \\dontrun{ set_cbioportal_db(db = \"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/test_cbioportal_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","title":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","text":"Helps troubleshoot API issues R session","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/test_cbioportal_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","text":"","code":"test_cbioportal_db()"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/test_cbioportal_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","text":"return value, called side effects. display alert notifying user successfully authenticated cBioPortal","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/test_cbioportal_db.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","text":"Karissa Whiting, Daniel D. Sjoberg","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/reference/test_cbioportal_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","text":"","code":"# \\dontrun{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  test_cbioportal_db() #> ✔ You are successfully connected! # }"},{"path":"https://karissawhiting.github.io/cbioportalR/dev/news/index.html","id":"cbioportalr-development-version","dir":"Changelog","previous_headings":"","what":"cbioportalR (development version)","title":"cbioportalR (development version)","text":"Fixed bug available_studies() arose underlying API change V2 V3.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/news/index.html","id":"cbioportalr-110","dir":"Changelog","previous_headings":"","what":"cbioportalR 1.1.0","title":"cbioportalR 1.1.0","text":"CRAN release: 2023-10-05 Added available_sample_lists() function returns available sample list IDs given study ID Added sample_list_id argument available_samples() returns samples IDs specific sample list within study (#53). Fixed {cli} errors make package compatible {cli} ≥ v3.4.1. Added CNA segmentation retrieval endpoint accessible via get_segments_by_sample() get_segments_by_study()). can use get_genomics_by_*(return_segments = TRUE) well access data.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/news/index.html","id":"cbioportalr-101","dir":"Changelog","previous_headings":"","what":"cbioportalR 1.0.1","title":"cbioportalR 1.0.1","text":"CRAN release: 2022-08-29 version makes package compatible cBioPortal v5.0. Main updates include: Fusion API endpoint URLs updated use structural-variant instead fusion specification. get_structural_variants_by_sample() get_structural_variants_by_study() added aliases get_fusions_by_sample() get_fusions_by_study(). functions return results fusion counterparts names supported. functions include data_type argument, structural_variant now available option. return results fusion. Output get_genetics_by_sample() get_genetics_by_study() functions now named lists names: mutation, cna, structural_variant (changed fusion) consistent cBioPortal v5.0 naming conventions. Tests examples longer run CRAN protect future changes internal database. still run Github Actions examples run website. examples adjusted use new cBioPortal profile name, needed (e.g. prad_msk_2019_structural_variants -> prad_msk_2019_structural_variants) bug fix add_hugo argument get_*_by_sample() functions.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/news/index.html","id":"cbioportalr-100","dir":"Changelog","previous_headings":"","what":"cbioportalR 1.0.0","title":"cbioportalR 1.0.0","text":"CRAN release: 2022-08-10 first release submitted CRAN, includes updates (listed versions 0.2.0 0.2.1) made since last Github release (0.1.0). Package overhauled since first release (0.1.0), code backwards compatible version.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/news/index.html","id":"summary-of-updates-since-1-0-0","dir":"Changelog","previous_headings":"","what":"Summary of Updates (since 0.1.0)","title":"cbioportalR 1.0.0","text":"Authentication schema updated. Package-level environmental variable can now set specifies login credentials session Functionality pull fusion data added Users can pull data study ID, sample ID, patient ID Update get_genomics_by_sample() related functions pull gene data available select samples instead pulling data IMPACT genes default Allow users pass Hugo Symbols Panel IDs get_genomics_by_sample() related functions.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/news/index.html","id":"cbioportalr-021","dir":"Changelog","previous_headings":"","what":"cbioportalR 0.2.1","title":"cbioportalR 0.2.1","text":"Update get_genomics_by_sample() related functions pull gene data available selected sample default instead pulling data IMPACT genes default. change default results user specify genes, return results previously include results non IMPACT gene mutations, CNA fusions, available. Allow users pass Hugo Symbols get_genomics_by_sample() related functions (previously specify Entrez Gene ID NULL) (#33) Allow users pass gene panels get_genomics_by_sample() related functions new panel argument. Previously specify genes specified sets gene IDs. (#15) Update functions take sample ID-study ID patient ID-study ID pairs less stringent data frame columns names accept. Previously functions accepted snake case (e.g. sample_id, study_id), now accept capitalization/delimiters (e.g. sampleID, sample id) (#16)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/news/index.html","id":"cbioportalr-020","dir":"Changelog","previous_headings":"","what":"cbioportalR 0.2.0","title":"cbioportalR 0.2.0","text":"Update internals functions exception cbp_api() Genomic data pulled common internal functions .get_data_by_study() .get_data_by_sample() wrappers data type Updated function names specify user pulling study sample ID Authentication schema updated. Package level environment variable now set instead global variable base URL specification Updates documentation Added extensive error messaging using {cli} Added unit tests Fixed fusion functionality. User can now pull fusion data study ID sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/dev/news/index.html","id":"cbioportalr-010","dir":"Changelog","previous_headings":"","what":"cbioportalR 0.1.0","title":"cbioportalR 0.1.0","text":"First release - basic API wrapping functionality ","code":""}]
